import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"SQL Server 实战案例：数据同步与异地容灾","description":"","frontmatter":{},"headers":[],"relativePath":"sql/projects/sqlserver/case-数据同步与容灾.md","filePath":"sql/projects/sqlserver/case-数据同步与容灾.md","lastUpdated":1747206212000}'),p={name:"sql/projects/sqlserver/case-数据同步与容灾.md"};function e(h,s,t,r,k,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="sql-server-实战案例-数据同步与异地容灾" tabindex="-1">SQL Server 实战案例：数据同步与异地容灾 <a class="header-anchor" href="#sql-server-实战案例-数据同步与异地容灾" aria-label="Permalink to &quot;SQL Server 实战案例：数据同步与异地容灾&quot;">​</a></h1><h2 id="_1-需求描述" tabindex="-1">1. 需求描述 <a class="header-anchor" href="#_1-需求描述" aria-label="Permalink to &quot;1. 需求描述&quot;">​</a></h2><p>以&quot;企业级数据库主备同步与异地容灾&quot;为例，要求实现主库与备库实时/准实时同步，支持故障自动切换，保障业务连续性。</p><h2 id="_2-方案类型说明" tabindex="-1">2. 方案类型说明 <a class="header-anchor" href="#_2-方案类型说明" aria-label="Permalink to &quot;2. 方案类型说明&quot;">​</a></h2><ul><li><strong>数据库镜像</strong>：主备自动同步，支持手动/自动故障切换，适合中小型场景。</li><li><strong>Always On 可用性组</strong>：多副本高可用，支持读写分离，适合企业级高可用需求。</li><li><strong>日志传送</strong>：定期将主库日志备份还原到备库，适合异地灾备。</li><li><strong>快照/复制</strong>：适合只读分析或历史数据同步。</li></ul><h2 id="_3-核心配置与操作命令" tabindex="-1">3. 核心配置与操作命令 <a class="header-anchor" href="#_3-核心配置与操作命令" aria-label="Permalink to &quot;3. 核心配置与操作命令&quot;">​</a></h2><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 以日志传送为例：</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 1. 主库定期备份事务日志</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BACKUP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> LOG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [mydb] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TO</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DISK</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> N&#39;/backup/mydb_log.trn&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WITH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> INIT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 2. 将日志文件复制到备库服务器（可用 robocopy、rsync 等工具）</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 3. 备库还原日志</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RESTORE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> LOG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [mydb] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DISK</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> N&#39;/backup/mydb_log.trn&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> WITH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NORECOVERY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- Always On 可用性组、数据库镜像等可通过 SQL Server Management Studio 图形界面配置，或用 T-SQL 脚本实现。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="_4-node-js-代码示例-含-jsdoc-注释" tabindex="-1">4. Node.js 代码示例（含 JSDoc 注释） <a class="header-anchor" href="#_4-node-js-代码示例-含-jsdoc-注释" aria-label="Permalink to &quot;4. Node.js 代码示例（含 JSDoc 注释）&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mssql&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 检查 SQL Server Always On 副本同步状态</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {sql.ConnectionPool}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 数据库连接池</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;Array&lt;{replica: string, state: string, role: string}&gt;&gt;}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 副本状态列表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> checkAlwaysOnStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">pool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    SELECT ag.name AS replica, ars.synchronization_state_desc AS state, arstates.role_desc AS role</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    FROM sys.availability_groups ag</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    JOIN sys.dm_hadr_availability_replica_states ars ON ag.group_id = ars.group_id</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    JOIN sys.dm_hadr_availability_replica_states arstates ON ars.replica_id = arstates.replica_id</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  \`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result.recordset;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 触发主备手动切换（需有权限）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {sql.ConnectionPool}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 连接池</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agName</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 可用性组名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;void&gt;}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> failoverAvailabilityGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">pool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">agName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`ALTER AVAILABILITY GROUP [\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">agName</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}] FAILOVER\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="_5-优化与总结" tabindex="-1">5. 优化与总结 <a class="header-anchor" href="#_5-优化与总结" aria-label="Permalink to &quot;5. 优化与总结&quot;">​</a></h2><ul><li>推荐 Always On 可用性组，支持多副本、读写分离、自动故障切换</li><li>日志传送适合异地灾备，延迟可控，配置简单</li><li>定期监控同步延迟与状态，异常及时告警</li><li>切换流程需演练，确保业务不中断</li><li>备库可只读，防止误操作</li><li>网络带宽、磁盘性能影响同步效率，建议专线或高速链路</li></ul><hr><p>本案例适合对业务连续性要求高的企业，建议结合实际场景选择合适的同步与容灾方案。</p>`,13)]))}const y=i(p,[["render",e]]);export{g as __pageData,y as default};
