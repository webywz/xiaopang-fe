import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"Spring Security 详解","description":"","frontmatter":{"title":"Spring Security 详解"},"headers":[],"relativePath":"spring/spring-security.md","filePath":"spring/spring-security.md","lastUpdated":1747111449000}'),e={name:"spring/spring-security.md"};function t(p,s,h,r,k,E){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="spring-security-详解" tabindex="-1">Spring Security 详解 <a class="header-anchor" href="#spring-security-详解" aria-label="Permalink to &quot;Spring Security 详解&quot;">​</a></h1><p>Spring Security 是 Spring 生态下的安全框架，提供了强大的认证、授权、会话管理、接口安全等能力，适合企业级项目。</p><h2 id="_1-框架简介" tabindex="-1">1. 框架简介 <a class="header-anchor" href="#_1-框架简介" aria-label="Permalink to &quot;1. 框架简介&quot;">​</a></h2><ul><li>基于 Servlet 过滤器链，所有请求都经过安全过滤</li><li>支持表单登录、HTTP Basic、Token、OAuth2、LDAP、SSO 等多种认证方式</li><li>与 SpringBoot 无缝集成，自动配置安全策略</li></ul><h2 id="_2-核心原理" tabindex="-1">2. 核心原理 <a class="header-anchor" href="#_2-核心原理" aria-label="Permalink to &quot;2. 核心原理&quot;">​</a></h2><h3 id="_2-1-过滤器链-filterchain" tabindex="-1">2.1 过滤器链（FilterChain） <a class="header-anchor" href="#_2-1-过滤器链-filterchain" aria-label="Permalink to &quot;2.1 过滤器链（FilterChain）&quot;">​</a></h3><ul><li>SecurityFilterChain 由多个 Filter 组成，按顺序处理请求</li><li>常见 Filter：UsernamePasswordAuthenticationFilter、BasicAuthenticationFilter、ExceptionTranslationFilter、FilterSecurityInterceptor</li></ul><h3 id="_2-2-认证-authentication" tabindex="-1">2.2 认证（Authentication） <a class="header-anchor" href="#_2-2-认证-authentication" aria-label="Permalink to &quot;2.2 认证（Authentication）&quot;">​</a></h3><ul><li>用户登录时，认证信息封装为 Authentication 对象</li><li>UserDetailsService 加载用户信息，PasswordEncoder 校验密码</li><li>认证成功后，信息存储在 SecurityContextHolder</li></ul><h3 id="_2-3-授权-authorization" tabindex="-1">2.3 授权（Authorization） <a class="header-anchor" href="#_2-3-授权-authorization" aria-label="Permalink to &quot;2.3 授权（Authorization）&quot;">​</a></h3><ul><li>AccessDecisionManager 决策是否有权访问资源</li><li>支持基于角色（hasRole）、权限（hasAuthority）、表达式（@PreAuthorize）</li><li>支持 URL、方法、注解多层级授权</li></ul><h3 id="_2-4-会话管理" tabindex="-1">2.4 会话管理 <a class="header-anchor" href="#_2-4-会话管理" aria-label="Permalink to &quot;2.4 会话管理&quot;">​</a></h3><ul><li>支持 Session、RememberMe、Token（JWT）、分布式会话（Spring Session）</li><li>支持并发登录控制、会话失效、踢人下线</li></ul><h2 id="_3-常用注解" tabindex="-1">3. 常用注解 <a class="header-anchor" href="#_3-常用注解" aria-label="Permalink to &quot;3. 常用注解&quot;">​</a></h2><ul><li><code>@EnableWebSecurity</code>：启用 Web 安全</li><li><code>@EnableGlobalMethodSecurity</code>：启用方法级安全</li><li><code>@PreAuthorize</code>、<code>@PostAuthorize</code>、<code>@Secured</code>、<code>@RolesAllowed</code>：方法/接口权限</li><li><code>@WithMockUser</code>：测试用</li></ul><h2 id="_4-配置与集成" tabindex="-1">4. 配置与集成 <a class="header-anchor" href="#_4-配置与集成" aria-label="Permalink to &quot;4. 配置与集成&quot;">​</a></h2><h3 id="_4-1-基本配置" tabindex="-1">4.1 基本配置 <a class="header-anchor" href="#_4-1-基本配置" aria-label="Permalink to &quot;4.1 基本配置&quot;">​</a></h3><ul><li>继承 WebSecurityConfigurerAdapter（5.7 之前）或配置 SecurityFilterChain（5.7+ 推荐）</li><li>配置登录页、登出、异常处理、静态资源放行</li><li>示例：<div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SecurityConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Bean</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SecurityFilterChain </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">filterChain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpSecurity </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Exception {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        http</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authorizeHttpRequests</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">antMatchers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/login&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/css/**&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">permitAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">anyRequest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authenticated</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">formLogin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loginPage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/login&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">permitAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">logout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">permitAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></li></ul><h3 id="_4-2-用户体系与密码加密" tabindex="-1">4.2 用户体系与密码加密 <a class="header-anchor" href="#_4-2-用户体系与密码加密" aria-label="Permalink to &quot;4.2 用户体系与密码加密&quot;">​</a></h3><ul><li>实现 UserDetailsService，加载用户、角色、权限</li><li>密码加密推荐 BCryptPasswordEncoder</li><li>支持自定义用户表、权限表、角色表</li></ul><h3 id="_4-3-jwt、oauth2、单点登录-sso" tabindex="-1">4.3 JWT、OAuth2、单点登录（SSO） <a class="header-anchor" href="#_4-3-jwt、oauth2、单点登录-sso" aria-label="Permalink to &quot;4.3 JWT、OAuth2、单点登录（SSO）&quot;">​</a></h3><ul><li>JWT 适合前后端分离、移动端、微服务</li><li>OAuth2 支持第三方登录、授权码、客户端模式</li><li>SSO 适合多系统统一认证</li></ul><h3 id="_4-4-方法级安全" tabindex="-1">4.4 方法级安全 <a class="header-anchor" href="#_4-4-方法级安全" aria-label="Permalink to &quot;4.4 方法级安全&quot;">​</a></h3><ul><li>@PreAuthorize(&quot;hasRole(&#39;ADMIN&#39;)&quot;)、@Secured({&quot;ROLE_ADMIN&quot;})</li><li>@EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true)</li></ul><h3 id="_4-5-rbac-权限模型" tabindex="-1">4.5 RBAC 权限模型 <a class="header-anchor" href="#_4-5-rbac-权限模型" aria-label="Permalink to &quot;4.5 RBAC 权限模型&quot;">​</a></h3><ul><li>用户-角色-权限三表设计</li><li>动态权限、菜单、按钮级控制</li><li>权限缓存、动态刷新</li></ul><h3 id="_4-6-接口安全" tabindex="-1">4.6 接口安全 <a class="header-anchor" href="#_4-6-接口安全" aria-label="Permalink to &quot;4.6 接口安全&quot;">​</a></h3><ul><li>防止 CSRF、XSS、SQL 注入</li><li>接口签名、限流、验证码</li><li>日志审计、异常报警</li></ul><h2 id="_5-与-springboot-的集成" tabindex="-1">5. 与 SpringBoot 的集成 <a class="header-anchor" href="#_5-与-springboot-的集成" aria-label="Permalink to &quot;5. 与 SpringBoot 的集成&quot;">​</a></h2><ul><li>SpringBoot 自动装配 Security，application.yml 配置即可</li><li>支持自定义登录、登出、异常、静态资源放行</li><li>推荐注解驱动开发，极少用 XML</li></ul><h2 id="_6-源码剖析-简要" tabindex="-1">6. 源码剖析（简要） <a class="header-anchor" href="#_6-源码剖析-简要" aria-label="Permalink to &quot;6. 源码剖析（简要）&quot;">​</a></h2><ul><li>SecurityFilterChain：过滤器链核心</li><li>AuthenticationManager、ProviderManager：认证管理</li><li>UserDetailsService、PasswordEncoder：用户与密码</li><li>AccessDecisionManager、Voter：授权决策</li><li>SecurityContextHolder：安全上下文</li></ul><h2 id="_7-最佳实践" tabindex="-1">7. 最佳实践 <a class="header-anchor" href="#_7-最佳实践" aria-label="Permalink to &quot;7. 最佳实践&quot;">​</a></h2><ul><li>密码加密存储，Token 定期刷新</li><li>静态资源、登录、注册、验证码等接口放行</li><li>生产环境强制 HTTPS</li><li>日志不打印敏感信息</li><li>定期安全扫描与渗透测试</li><li>依赖库及时升级，修复 CVE</li></ul><h2 id="_8-常见问题与-faq" tabindex="-1">8. 常见问题与 FAQ <a class="header-anchor" href="#_8-常见问题与-faq" aria-label="Permalink to &quot;8. 常见问题与 FAQ&quot;">​</a></h2><h3 id="q-如何自定义登录逻辑" tabindex="-1">Q: 如何自定义登录逻辑？ <a class="header-anchor" href="#q-如何自定义登录逻辑" aria-label="Permalink to &quot;Q: 如何自定义登录逻辑？&quot;">​</a></h3><p>A: 实现 UserDetailsService，配置自定义登录页和认证流程。</p><h3 id="q-如何实现接口权限动态刷新" tabindex="-1">Q: 如何实现接口权限动态刷新？ <a class="header-anchor" href="#q-如何实现接口权限动态刷新" aria-label="Permalink to &quot;Q: 如何实现接口权限动态刷新？&quot;">​</a></h3><p>A: 权限变更后刷新缓存，Token 失效或强制重新登录。</p><h3 id="q-如何防止接口被刷" tabindex="-1">Q: 如何防止接口被刷？ <a class="header-anchor" href="#q-如何防止接口被刷" aria-label="Permalink to &quot;Q: 如何防止接口被刷？&quot;">​</a></h3><p>A: 配合限流（如 Bucket4j、Sentinel）、验证码、IP 黑名单。</p><h3 id="q-如何集成第三方登录" tabindex="-1">Q: 如何集成第三方登录？ <a class="header-anchor" href="#q-如何集成第三方登录" aria-label="Permalink to &quot;Q: 如何集成第三方登录？&quot;">​</a></h3><p>A: 用 spring-boot-starter-oauth2-client，配置 provider 信息。</p><h2 id="_9-过滤器链全流程与自定义-filter-极致细化" tabindex="-1">9. 过滤器链全流程与自定义 Filter 极致细化 <a class="header-anchor" href="#_9-过滤器链全流程与自定义-filter-极致细化" aria-label="Permalink to &quot;9. 过滤器链全流程与自定义 Filter 极致细化&quot;">​</a></h2><h3 id="_9-1-过滤器链全流程源码与流程图" tabindex="-1">9.1 过滤器链全流程源码与流程图 <a class="header-anchor" href="#_9-1-过滤器链全流程源码与流程图" aria-label="Permalink to &quot;9.1 过滤器链全流程源码与流程图&quot;">​</a></h3><h4 id="mermaid-时序图" tabindex="-1">Mermaid 时序图 <a class="header-anchor" href="#mermaid-时序图" aria-label="Permalink to &quot;Mermaid 时序图&quot;">​</a></h4><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sequenceDiagram</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant Client</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant DelegatingFilterProxy</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant FilterChainProxy</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant SecurityContextPersistenceFilter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant UsernamePasswordAuthenticationFilter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant ExceptionTranslationFilter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant FilterSecurityInterceptor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant Application</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Client-&gt;&gt;DelegatingFilterProxy: HTTP请求</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DelegatingFilterProxy-&gt;&gt;FilterChainProxy: doFilter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    FilterChainProxy-&gt;&gt;SecurityContextPersistenceFilter: doFilter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    SecurityContextPersistenceFilter-&gt;&gt;UsernamePasswordAuthenticationFilter: doFilter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    UsernamePasswordAuthenticationFilter-&gt;&gt;ExceptionTranslationFilter: doFilter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ExceptionTranslationFilter-&gt;&gt;FilterSecurityInterceptor: doFilter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    FilterSecurityInterceptor-&gt;&gt;Application: 业务处理</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="filter链源码关键片段" tabindex="-1">Filter链源码关键片段 <a class="header-anchor" href="#filter链源码关键片段" aria-label="Permalink to &quot;Filter链源码关键片段&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * FilterChainProxy#doFilterInternal</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> request</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> HTTP请求</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> response</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> HTTP响应</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> chain</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 原始Filter链</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> doFilterInternal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        throws IOException, ServletException {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Filter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; filters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getFilters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (filters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> filters.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        chain.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">doFilter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request, response);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    VirtualFilterChain vfc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> VirtualFilterChain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request, chain, filters);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    vfc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">doFilter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request, response);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h4 id="filter链性能监控与aop埋点" tabindex="-1">Filter链性能监控与AOP埋点 <a class="header-anchor" href="#filter链性能监控与aop埋点" aria-label="Permalink to &quot;Filter链性能监控与AOP埋点&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @description 过滤器链性能监控AOP</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Aspect</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Component</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FilterChainMonitorAspect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Around</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;execution(* org.springframework.security.web.FilterChainProxy.doFilterInternal(..))&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Object </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">monitor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ProceedingJoinPoint </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">pjp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Throwable {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">currentTimeMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Object result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pjp.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">proceed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        long</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cost </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">currentTimeMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> start;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        log.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;FilterChain执行耗时: {}ms&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cost);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h4 id="filter链单元测试" tabindex="-1">Filter链单元测试 <a class="header-anchor" href="#filter链单元测试" aria-label="Permalink to &quot;Filter链单元测试&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @description 使用MockMvc测试自定义Filter</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SpringBootTest</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AutoConfigureMockMvc</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FilterTest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Autowired</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MockMvc mockMvc;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> testIpBlacklistFilter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Exception {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        mockMvc.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">perform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/api/test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRemoteAddr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;192.168.1.100&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">andExpect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isForbidden</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h4 id="filter链常见陷阱" tabindex="-1">Filter链常见陷阱 <a class="header-anchor" href="#filter链常见陷阱" aria-label="Permalink to &quot;Filter链常见陷阱&quot;">​</a></h4><ul><li>Filter顺序错误导致认证/授权失效</li><li>异常未捕获导致敏感信息泄露</li><li>自定义Filter未继承<code>OncePerRequestFilter</code>导致重复执行</li><li>WebFlux异步场景下需用<code>WebFilter</code>实现</li></ul><h3 id="_9-2-自定义filter极致实战" tabindex="-1">9.2 自定义Filter极致实战 <a class="header-anchor" href="#_9-2-自定义filter极致实战" aria-label="Permalink to &quot;9.2 自定义Filter极致实战&quot;">​</a></h3><h4 id="典型场景" tabindex="-1">典型场景 <a class="header-anchor" href="#典型场景" aria-label="Permalink to &quot;典型场景&quot;">​</a></h4><ul><li>日志审计</li><li>IP黑白名单</li><li>接口签名</li><li>租户隔离</li><li>行为分析</li></ul><h4 id="自定义filter源码与jsdoc注释" tabindex="-1">自定义Filter源码与JSDoc注释 <a class="header-anchor" href="#自定义filter源码与jsdoc注释" aria-label="Permalink to &quot;自定义Filter源码与JSDoc注释&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @description 自定义接口签名校验Filter</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> yourname</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ApiSignFilter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> OncePerRequestFilter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> doFilterInternal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpServletRequest </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, HttpServletResponse </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, FilterChain </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filterChain</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ServletException, IOException {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String sign </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;X-Sign&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String timestamp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHeader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;X-Timestamp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 校验签名与时间戳</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SignUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">verify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request, sign, timestamp)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpServletResponse.SC_UNAUTHORIZED);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            response.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getWriter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;签名校验失败&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        filterChain.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">doFilter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request, response);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h4 id="注册与顺序" tabindex="-1">注册与顺序 <a class="header-anchor" href="#注册与顺序" aria-label="Permalink to &quot;注册与顺序&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">http.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addFilterBefore</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ApiSignFilter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(), UsernamePasswordAuthenticationFilter.class);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="性能调优" tabindex="-1">性能调优 <a class="header-anchor" href="#性能调优" aria-label="Permalink to &quot;性能调优&quot;">​</a></h4><ul><li>只对敏感接口启用自定义Filter</li><li>Filter内部避免阻塞操作</li><li>监控Filter耗时，及时告警</li></ul><h4 id="监控与告警" tabindex="-1">监控与告警 <a class="header-anchor" href="#监控与告警" aria-label="Permalink to &quot;监控与告警&quot;">​</a></h4><ul><li>可用Prometheus+Grafana监控Filter链耗时</li><li>异常日志自动告警</li></ul><h2 id="_10-认证流程源码级极致细化" tabindex="-1">10. 认证流程源码级极致细化 <a class="header-anchor" href="#_10-认证流程源码级极致细化" aria-label="Permalink to &quot;10. 认证流程源码级极致细化&quot;">​</a></h2><h3 id="_10-1-usernamepasswordauthenticationfilter源码流程图" tabindex="-1">10.1 UsernamePasswordAuthenticationFilter源码流程图 <a class="header-anchor" href="#_10-1-usernamepasswordauthenticationfilter源码流程图" aria-label="Permalink to &quot;10.1 UsernamePasswordAuthenticationFilter源码流程图&quot;">​</a></h3><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sequenceDiagram</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant Client</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant UsernamePasswordAuthenticationFilter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant AuthenticationManager</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant ProviderManager</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant DaoAuthenticationProvider</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant UserDetailsService</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant PasswordEncoder</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Client-&gt;&gt;UsernamePasswordAuthenticationFilter: POST /login</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    UsernamePasswordAuthenticationFilter-&gt;&gt;AuthenticationManager: authenticate(token)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    AuthenticationManager-&gt;&gt;ProviderManager: authenticate(token)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ProviderManager-&gt;&gt;DaoAuthenticationProvider: authenticate(token)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DaoAuthenticationProvider-&gt;&gt;UserDetailsService: loadUserByUsername</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    UserDetailsService--&gt;&gt;DaoAuthenticationProvider: UserDetails</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DaoAuthenticationProvider-&gt;&gt;PasswordEncoder: matches(raw, encoded)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    PasswordEncoder--&gt;&gt;DaoAuthenticationProvider: boolean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    DaoAuthenticationProvider--&gt;&gt;ProviderManager: Authentication</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ProviderManager--&gt;&gt;AuthenticationManager: Authentication</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    AuthenticationManager--&gt;&gt;UsernamePasswordAuthenticationFilter: Authentication</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    UsernamePasswordAuthenticationFilter--&gt;&gt;Client: 登录成功/失败响应</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h4 id="源码关键路径" tabindex="-1">源码关键路径 <a class="header-anchor" href="#源码关键路径" aria-label="Permalink to &quot;源码关键路径&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * UsernamePasswordAuthenticationFilter#attemptAuthentication</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> request</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> HTTP请求</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> response</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> HTTP响应</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 认证结果Authentication</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Authentication </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">attemptAuthentication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(HttpServletRequest request, HttpServletResponse response)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        throws AuthenticationException {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    String username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> obtainUsername</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    String password </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> obtainPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    UsernamePasswordAuthenticationToken authRequest </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UsernamePasswordAuthenticationToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username, password);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    setDetails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(request, authRequest);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAuthenticationManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(authRequest);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_10-2-providermanager多provider链路与扩展点" tabindex="-1">10.2 ProviderManager多Provider链路与扩展点 <a class="header-anchor" href="#_10-2-providermanager多provider链路与扩展点" aria-label="Permalink to &quot;10.2 ProviderManager多Provider链路与扩展点&quot;">​</a></h3><h4 id="多provider链路" tabindex="-1">多Provider链路 <a class="header-anchor" href="#多provider链路" aria-label="Permalink to &quot;多Provider链路&quot;">​</a></h4><ul><li>支持多种认证方式（如密码、短信、第三方）</li><li>遍历所有Provider，遇到支持的即执行</li></ul><h4 id="源码片段" tabindex="-1">源码片段 <a class="header-anchor" href="#源码片段" aria-label="Permalink to &quot;源码片段&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * ProviderManager#authenticate</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (AuthenticationProvider provider </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getProviders</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (provider.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">supports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(authentication.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getClass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> provider.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(authentication);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h4 id="自定义多因子认证provider" tabindex="-1">自定义多因子认证Provider <a class="header-anchor" href="#自定义多因子认证provider" aria-label="Permalink to &quot;自定义多因子认证Provider&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @description 自定义MFA认证Provider</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MfaAuthenticationProvider</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AuthenticationProvider</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Authentication </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">authenticate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Authentication </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">authentication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throws</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AuthenticationException {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 校验用户名密码+动态码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> supports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Class&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">authentication</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MfaAuthenticationToken.class.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isAssignableFrom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(authentication);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_10-3-userdetailsservice与多数据源-多租户" tabindex="-1">10.3 UserDetailsService与多数据源/多租户 <a class="header-anchor" href="#_10-3-userdetailsservice与多数据源-多租户" aria-label="Permalink to &quot;10.3 UserDetailsService与多数据源/多租户&quot;">​</a></h3><h4 id="多数据源-多租户动态切换" tabindex="-1">多数据源/多租户动态切换 <a class="header-anchor" href="#多数据源-多租户动态切换" aria-label="Permalink to &quot;多数据源/多租户动态切换&quot;">​</a></h4><ul><li>可通过ThreadLocal或AOP动态切换数据源</li><li>不同租户可用不同UserDetailsService实现</li></ul><h4 id="密码加密升级兼容" tabindex="-1">密码加密升级兼容 <a class="header-anchor" href="#密码加密升级兼容" aria-label="Permalink to &quot;密码加密升级兼容&quot;">​</a></h4><ul><li>支持多种PasswordEncoder，兼容历史数据</li><li>推荐BCrypt，升级时可用DelegatingPasswordEncoder</li></ul><h4 id="认证流程分布式追踪" tabindex="-1">认证流程分布式追踪 <a class="header-anchor" href="#认证流程分布式追踪" aria-label="Permalink to &quot;认证流程分布式追踪&quot;">​</a></h4><ul><li>在认证链路中埋点TraceId，便于问题追踪</li><li>日志脱敏，避免泄露密码/Token</li></ul><h2 id="_11-授权流程源码级极致细化" tabindex="-1">11. 授权流程源码级极致细化 <a class="header-anchor" href="#_11-授权流程源码级极致细化" aria-label="Permalink to &quot;11. 授权流程源码级极致细化&quot;">​</a></h2><h3 id="_11-1-accessdecisionmanager-voter-源码与流程图" tabindex="-1">11.1 AccessDecisionManager/Voter 源码与流程图 <a class="header-anchor" href="#_11-1-accessdecisionmanager-voter-源码与流程图" aria-label="Permalink to &quot;11.1 AccessDecisionManager/Voter 源码与流程图&quot;">​</a></h3><h4 id="mermaid-流程图" tabindex="-1">Mermaid 流程图 <a class="header-anchor" href="#mermaid-流程图" aria-label="Permalink to &quot;Mermaid 流程图&quot;">​</a></h4><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sequenceDiagram</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant FilterSecurityInterceptor</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant AccessDecisionManager</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant Voter1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant Voter2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant VoterN</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    FilterSecurityInterceptor-&gt;&gt;AccessDecisionManager: decide(auth, object, attributes)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    AccessDecisionManager-&gt;&gt;Voter1: vote(...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    AccessDecisionManager-&gt;&gt;Voter2: vote(...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    AccessDecisionManager-&gt;&gt;VoterN: vote(...)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    AccessDecisionManager--&gt;&gt;FilterSecurityInterceptor: ACCESS_GRANTED/ACCESS_DENIED</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h4 id="accessdecisionmanager-三种实现源码对比" tabindex="-1">AccessDecisionManager 三种实现源码对比 <a class="header-anchor" href="#accessdecisionmanager-三种实现源码对比" aria-label="Permalink to &quot;AccessDecisionManager 三种实现源码对比&quot;">​</a></h4><ul><li>AffirmativeBased（一票通过）</li><li>ConsensusBased（少数服从多数）</li><li>UnanimousBased（一票否决）</li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * AffirmativeBased#decide</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (AccessDecisionVoter voter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getDecisionVoters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> voter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vote</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(authentication, object, configAttributes);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AccessDecisionVoter.ACCESS_GRANTED) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AccessDeniedException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(...);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h4 id="自定义-voter-性能优化与缓存" tabindex="-1">自定义 Voter 性能优化与缓存 <a class="header-anchor" href="#自定义-voter-性能优化与缓存" aria-label="Permalink to &quot;自定义 Voter 性能优化与缓存&quot;">​</a></h4><ul><li>可将权限数据预加载到本地缓存/Redis，减少数据库查询</li><li>Voter 只做本地判断，避免远程调用</li></ul><h4 id="动态权限热加载完整实现" tabindex="-1">动态权限热加载完整实现 <a class="header-anchor" href="#动态权限热加载完整实现" aria-label="Permalink to &quot;动态权限热加载完整实现&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @description 动态权限元数据源，支持热加载</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DynamicSecurityMetadataSource</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FilterInvocationSecurityMetadataSource</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> volatile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Collection&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ConfigAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt; urlRoleMap;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 热加载方法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> reload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Collection&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ConfigAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">newMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.urlRoleMap </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> newMap;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Collection&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ConfigAttribute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getAttributes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Object </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ((FilterInvocation) object).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRequestUrl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> urlRoleMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(url);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h4 id="授权决策的灰度发布与回滚" tabindex="-1">授权决策的灰度发布与回滚 <a class="header-anchor" href="#授权决策的灰度发布与回滚" aria-label="Permalink to &quot;授权决策的灰度发布与回滚&quot;">​</a></h4><ul><li>新旧权限数据并存，灰度用户走新权限，其他走旧权限</li><li>回滚时切换数据源即可</li></ul><h4 id="常见陷阱与最佳实践" tabindex="-1">常见陷阱与最佳实践 <a class="header-anchor" href="#常见陷阱与最佳实践" aria-label="Permalink to &quot;常见陷阱与最佳实践&quot;">​</a></h4><ul><li>动态权限需保证缓存一致性，建议用消息队列同步</li><li>Voter 设计需避免循环依赖和性能瓶颈</li><li>授权失败建议返回标准错误码，避免信息泄露</li></ul><h2 id="_12-jwt-oauth2-sso-实战与安全要点极致细化" tabindex="-1">12. JWT/OAuth2/SSO 实战与安全要点极致细化 <a class="header-anchor" href="#_12-jwt-oauth2-sso-实战与安全要点极致细化" aria-label="Permalink to &quot;12. JWT/OAuth2/SSO 实战与安全要点极致细化&quot;">​</a></h2><h3 id="_12-1-jwt-token-结构与安全攻防" tabindex="-1">12.1 JWT Token 结构与安全攻防 <a class="header-anchor" href="#_12-1-jwt-token-结构与安全攻防" aria-label="Permalink to &quot;12.1 JWT Token 结构与安全攻防&quot;">​</a></h3><h4 id="jwt-结构与签名算法" tabindex="-1">JWT 结构与签名算法 <a class="header-anchor" href="#jwt-结构与签名算法" aria-label="Permalink to &quot;JWT 结构与签名算法&quot;">​</a></h4><ul><li>Header.Payload.Signature 三段式</li><li>支持 HMAC、RSA、ECDSA 等签名算法</li></ul><h4 id="jwt-生成与校验源码" tabindex="-1">JWT 生成与校验源码 <a class="header-anchor" href="#jwt-生成与校验源码" aria-label="Permalink to &quot;JWT 生成与校验源码&quot;">​</a></h4><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @description JWT 生成与校验工具</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> JwtUtil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 生成JWT</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">secret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Jwts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">builder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setSubject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(username)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setExpiration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">currentTimeMillis</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3600_000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">signWith</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SignatureAlgorithm.HS512, secret)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compact</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 校验JWT</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Claims </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">secret</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Jwts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setSigningKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(secret).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseClaimsJws</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(token).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBody</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><h4 id="jwt-黑名单、token-刷新、单点登出" tabindex="-1">JWT 黑名单、Token 刷新、单点登出 <a class="header-anchor" href="#jwt-黑名单、token-刷新、单点登出" aria-label="Permalink to &quot;JWT 黑名单、Token 刷新、单点登出&quot;">​</a></h4><ul><li>黑名单：Token 失效时存入 Redis，校验时拦截</li><li>刷新：短Token+RefreshToken，刷新时生成新Token</li><li>单点登出：所有子系统同步失效</li></ul><h4 id="jwt-攻防演练" tabindex="-1">JWT 攻防演练 <a class="header-anchor" href="#jwt-攻防演练" aria-label="Permalink to &quot;JWT 攻防演练&quot;">​</a></h4><ul><li>攻击：伪造Token、重放攻击、算法混淆攻击（alg:none）</li><li>防御： <ul><li>只允许服务端签发Token，禁止客户端自签</li><li>校验Token签名算法，拒绝alg:none</li><li>Token中不存敏感明文</li><li>Token定期刷新，及时失效</li></ul></li></ul><h4 id="自动化测试" tabindex="-1">自动化测试 <a class="header-anchor" href="#自动化测试" aria-label="Permalink to &quot;自动化测试&quot;">​</a></h4><ul><li>可用Postman、JMeter、OWASP ZAP自动化测试Token有效性与安全性</li></ul><h3 id="_12-2-oauth2-协议细节与spring集成" tabindex="-1">12.2 OAuth2 协议细节与Spring集成 <a class="header-anchor" href="#_12-2-oauth2-协议细节与spring集成" aria-label="Permalink to &quot;12.2 OAuth2 协议细节与Spring集成&quot;">​</a></h3><h4 id="oauth2-四种授权模式流程图" tabindex="-1">OAuth2 四种授权模式流程图 <a class="header-anchor" href="#oauth2-四种授权模式流程图" aria-label="Permalink to &quot;OAuth2 四种授权模式流程图&quot;">​</a></h4><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flowchart TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[Resource Owner] -- 授权码模式 --&gt; B[Authorization Server]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B -- 授权码 --&gt; A</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A -- 授权码换Token --&gt; C[Client]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C -- Token访问 --&gt; D[Resource Server]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h4 id="oauth2-openid-connect协议要点" tabindex="-1">OAuth2/OpenID Connect协议要点 <a class="header-anchor" href="#oauth2-openid-connect协议要点" aria-label="Permalink to &quot;OAuth2/OpenID Connect协议要点&quot;">​</a></h4><ul><li>授权码模式最安全，推荐Web端使用</li><li>密码模式适合自有App，客户端模式适合服务间调用</li><li>OpenID Connect扩展了用户身份信息（id_token）</li></ul><h4 id="spring-security-oauth2-源码集成" tabindex="-1">Spring Security OAuth2 源码集成 <a class="header-anchor" href="#spring-security-oauth2-源码集成" aria-label="Permalink to &quot;Spring Security OAuth2 源码集成&quot;">​</a></h4><ul><li>资源服务器：<code>spring-boot-starter-oauth2-resource-server</code></li><li>授权服务器：<code>spring-authorization-server</code>（推荐）</li><li>配置示例：</li></ul><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  security</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    oauth2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      resourceserver</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        jwt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          jwk-set-uri</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://localhost:9000/oauth2/jwks</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h4 id="oauth2-攻防演练" tabindex="-1">OAuth2 攻防演练 <a class="header-anchor" href="#oauth2-攻防演练" aria-label="Permalink to &quot;OAuth2 攻防演练&quot;">​</a></h4><ul><li>攻击：CSRF、重定向钓鱼、Token泄露</li><li>防御： <ul><li>严格校验redirect_uri</li><li>Token只通过HTTPS传输</li><li>配置state参数防CSRF</li></ul></li></ul><h4 id="自动化测试-1" tabindex="-1">自动化测试 <a class="header-anchor" href="#自动化测试-1" aria-label="Permalink to &quot;自动化测试&quot;">​</a></h4><ul><li>使用OAuth2 Playground、Postman测试授权流程</li></ul><h3 id="_12-3-sso-跨域、信任传递、会话同步极致细化" tabindex="-1">12.3 SSO 跨域、信任传递、会话同步极致细化 <a class="header-anchor" href="#_12-3-sso-跨域、信任传递、会话同步极致细化" aria-label="Permalink to &quot;12.3 SSO 跨域、信任传递、会话同步极致细化&quot;">​</a></h3><h4 id="sso-跨域同步流程图" tabindex="-1">SSO 跨域同步流程图 <a class="header-anchor" href="#sso-跨域同步流程图" aria-label="Permalink to &quot;SSO 跨域同步流程图&quot;">​</a></h4><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sequenceDiagram</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant Browser</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant SSO-Server</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant App1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant App2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Browser-&gt;&gt;SSO-Server: 登录</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    SSO-Server--&gt;&gt;Browser: Set-Cookie SSO-Token</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Browser-&gt;&gt;App1: 携带SSO-Token访问</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    App1-&gt;&gt;SSO-Server: 校验Token</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    SSO-Server--&gt;&gt;App1: 校验结果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Browser-&gt;&gt;App2: 携带SSO-Token访问</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    App2-&gt;&gt;SSO-Server: 校验Token</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    SSO-Server--&gt;&gt;App2: 校验结果</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h4 id="sso-cookie-token-同步与安全陷阱" tabindex="-1">SSO Cookie/Token 同步与安全陷阱 <a class="header-anchor" href="#sso-cookie-token-同步与安全陷阱" aria-label="Permalink to &quot;SSO Cookie/Token 同步与安全陷阱&quot;">​</a></h4><ul><li>跨域需设置Cookie的Domain属性一致</li><li>建议Token只存于HttpOnly Cookie，防止XSS</li><li>Token传递建议用Header，防止CSRF</li></ul><h4 id="会话同步与失效" tabindex="-1">会话同步与失效 <a class="header-anchor" href="#会话同步与失效" aria-label="Permalink to &quot;会话同步与失效&quot;">​</a></h4><ul><li>Redis发布订阅/消息队列同步会话状态</li><li>子系统收到登出消息后本地清理会话</li></ul><h4 id="sso-攻防演练" tabindex="-1">SSO 攻防演练 <a class="header-anchor" href="#sso-攻防演练" aria-label="Permalink to &quot;SSO 攻防演练&quot;">​</a></h4><ul><li>攻击：Token劫持、伪造、重放</li><li>防御： <ul><li>Token加密存储，定期刷新</li><li>关键操作需二次校验（如验证码、短信）</li><li>Token绑定设备/UA/IP</li></ul></li></ul><h4 id="自动化测试-2" tabindex="-1">自动化测试 <a class="header-anchor" href="#自动化测试-2" aria-label="Permalink to &quot;自动化测试&quot;">​</a></h4><ul><li>Selenium自动化登录/登出测试</li><li>JMeter模拟多系统并发登录</li></ul><h2 id="_13-rbac-动态权限设计与缓存实现极致细化补充" tabindex="-1">13. RBAC 动态权限设计与缓存实现极致细化补充 <a class="header-anchor" href="#_13-rbac-动态权限设计与缓存实现极致细化补充" aria-label="Permalink to &quot;13. RBAC 动态权限设计与缓存实现极致细化补充&quot;">​</a></h2><h3 id="_13-3-rbac-权限模型表结构与sql" tabindex="-1">13.3 RBAC 权限模型表结构与SQL <a class="header-anchor" href="#_13-3-rbac-权限模型表结构与sql" aria-label="Permalink to &quot;13.3 RBAC 权限模型表结构与SQL&quot;">​</a></h3><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 用户表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sys_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BIGINT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  username </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TINYINT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 角色表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sys_role</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BIGINT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  code </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 权限表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sys_permission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BIGINT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  code </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) COMMENT </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;menu/button/data&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  url</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 用户-角色关联</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sys_user_role</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  user_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BIGINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  role_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BIGINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(user_id, role_id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 角色-权限关联</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sys_role_permission</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  role_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BIGINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  permission_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BIGINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(role_id, permission_id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div><h3 id="_13-4-菜单-按钮-数据权限细粒度动态控制" tabindex="-1">13.4 菜单/按钮/数据权限细粒度动态控制 <a class="header-anchor" href="#_13-4-菜单-按钮-数据权限细粒度动态控制" aria-label="Permalink to &quot;13.4 菜单/按钮/数据权限细粒度动态控制&quot;">​</a></h3><ul><li>菜单权限：前端根据接口返回的菜单树渲染</li><li>按钮权限：接口返回按钮权限code，前端按需渲染</li><li>数据权限：后端根据用户权限拼接SQL条件</li></ul><h3 id="_13-5-权限缓存分层与分布式一致性" tabindex="-1">13.5 权限缓存分层与分布式一致性 <a class="header-anchor" href="#_13-5-权限缓存分层与分布式一致性" aria-label="Permalink to &quot;13.5 权限缓存分层与分布式一致性&quot;">​</a></h3><ul><li>用户-角色-权限三级缓存，推荐 Redis Hash 结构</li><li>权限变更时通过消息队列/Redis发布订阅通知所有节点失效</li><li>缓存失效优先保证安全，宁可多拦截，不能少拦截</li></ul><h3 id="_13-6-权限变更灰度发布与回滚" tabindex="-1">13.6 权限变更灰度发布与回滚 <a class="header-anchor" href="#_13-6-权限变更灰度发布与回滚" aria-label="Permalink to &quot;13.6 权限变更灰度发布与回滚&quot;">​</a></h3><ul><li>新旧权限数据并存，灰度用户走新权限，其他走旧权限</li><li>回滚时切换缓存/数据源即可</li></ul><h2 id="_14-接口安全实战代码极致细化补充" tabindex="-1">14. 接口安全实战代码极致细化补充 <a class="header-anchor" href="#_14-接口安全实战代码极致细化补充" aria-label="Permalink to &quot;14. 接口安全实战代码极致细化补充&quot;">​</a></h2><h3 id="_14-5-接口安全自动化测试与ci集成" tabindex="-1">14.5 接口安全自动化测试与CI集成 <a class="header-anchor" href="#_14-5-接口安全自动化测试与ci集成" aria-label="Permalink to &quot;14.5 接口安全自动化测试与CI集成&quot;">​</a></h3><ul><li>推荐集成 OWASP ZAP、Postman/Newman、JMeter 脚本到CI流程</li><li>自动化测试用例覆盖：CSRF、XSS、SQL注入、签名、限流、验证码</li></ul><h3 id="_14-6-分布式限流实现" tabindex="-1">14.6 分布式限流实现 <a class="header-anchor" href="#_14-6-分布式限流实现" aria-label="Permalink to &quot;14.6 分布式限流实现&quot;">​</a></h3><ul><li>Redis+Lua脚本实现全局限流</li></ul><div class="language-lua vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- redis-limiter.lua</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> key </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KEYS[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> limit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tonumber</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ARGV[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> current </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> tonumber</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(redis.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;get&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, key) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> current </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> limit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  redis.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;INCRBY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, key, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  redis.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">call</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;EXPIRE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, key, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><ul><li>Java调用示例：</li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 调用Redis Lua脚本实现分布式限流</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Long allowed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> redisTemplate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DefaultRedisScript&lt;&gt;(luaScript, Long.class),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Collections.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">singletonList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rate:api:&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> userId), Collections.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">singletonList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (allowed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RateLimitException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_14-7-验证码与ai风控接入" tabindex="-1">14.7 验证码与AI风控接入 <a class="header-anchor" href="#_14-7-验证码与ai风控接入" aria-label="Permalink to &quot;14.7 验证码与AI风控接入&quot;">​</a></h3><ul><li>Kaptcha/EasyCaptcha集成滑动验证码</li><li>AI风控：接入第三方API，分析行为轨迹、设备指纹、IP信誉</li><li>验证码自动化测试：Selenium+Tesseract OCR识别验证码，检测防刷效果</li></ul><h2 id="_15-springboot-自动装配机制与安全自动化检测补充" tabindex="-1">15. SpringBoot 自动装配机制与安全自动化检测补充 <a class="header-anchor" href="#_15-springboot-自动装配机制与安全自动化检测补充" aria-label="Permalink to &quot;15. SpringBoot 自动装配机制与安全自动化检测补充&quot;">​</a></h2><h3 id="_15-3-自动化安全基线检测脚本" tabindex="-1">15.3 自动化安全基线检测脚本 <a class="header-anchor" href="#_15-3-自动化安全基线检测脚本" aria-label="Permalink to &quot;15.3 自动化安全基线检测脚本&quot;">​</a></h3><ul><li>推荐使用shell/python脚本定期检测： <ul><li>HTTPS强制、敏感端口关闭、debug禁用</li><li>依赖库CVE扫描（如trivy、nexusIQ）</li><li>日志脱敏、敏感配置加密</li></ul></li><li>示例shell脚本：</li></ul><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查HTTPS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -q</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;server.ssl.enabled=true&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> application.yml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;[PASS] HTTPS已启用&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;[FAIL] 未启用HTTPS&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查debug</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -q</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;debug: true&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> application.yml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;[FAIL] debug未关闭&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;[PASS] debug已关闭&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_15-4-配置中心动态刷新安全配置" tabindex="-1">15.4 配置中心动态刷新安全配置 <a class="header-anchor" href="#_15-4-配置中心动态刷新安全配置" aria-label="Permalink to &quot;15.4 配置中心动态刷新安全配置&quot;">​</a></h3><ul><li>推荐Nacos/Apollo等配置中心，支持动态刷新安全策略</li><li>动态变更需加分布式锁，防止并发冲突</li></ul><h2 id="_16-常见安全漏洞与攻防案例极致细化补充" tabindex="-1">16. 常见安全漏洞与攻防案例极致细化补充 <a class="header-anchor" href="#_16-常见安全漏洞与攻防案例极致细化补充" aria-label="Permalink to &quot;16. 常见安全漏洞与攻防案例极致细化补充&quot;">​</a></h2><h3 id="_16-3-真实攻防payload与复现" tabindex="-1">16.3 真实攻防Payload与复现 <a class="header-anchor" href="#_16-3-真实攻防payload与复现" aria-label="Permalink to &quot;16.3 真实攻防Payload与复现&quot;">​</a></h3><ul><li>XSS: <code>&lt;img src=x onerror=alert(1)&gt;</code></li><li>CSRF: <code>&lt;form action=&#39;http://target/api/transfer&#39; method=&#39;POST&#39;&gt;&lt;input name=&#39;amount&#39; value=&#39;10000&#39;&gt;&lt;/form&gt;</code></li><li>SQL注入: <code>id=1&#39; OR &#39;1&#39;=&#39;1&#39; -- </code></li><li>会话劫持: 利用Burp Suite抓包篡改Cookie</li><li>越权: 直接访问<code>/admin/deleteUser?id=2</code></li></ul><h3 id="_16-4-自动化漏洞扫描与ci集成" tabindex="-1">16.4 自动化漏洞扫描与CI集成 <a class="header-anchor" href="#_16-4-自动化漏洞扫描与ci集成" aria-label="Permalink to &quot;16.4 自动化漏洞扫描与CI集成&quot;">​</a></h3><ul><li>推荐集成SonarQube、OWASP ZAP、trivy等工具到CI/CD流程</li><li>定期扫描依赖库CVE、代码安全缺陷、接口安全</li></ul><h2 id="_17-生产环境安全加固清单极致细化补充" tabindex="-1">17. 生产环境安全加固清单极致细化补充 <a class="header-anchor" href="#_17-生产环境安全加固清单极致细化补充" aria-label="Permalink to &quot;17. 生产环境安全加固清单极致细化补充&quot;">​</a></h2><ul><li>配置CSP(Content-Security-Policy)防止XSS</li><li>配置Referrer-Policy、Feature-Policy等安全header</li><li>生产环境关闭所有未用端口和管理后台</li><li>关键操作加二次确认（如短信/邮箱验证码）</li><li>重要操作全链路日志审计与告警</li><li>定期安全培训与应急演练</li></ul><h2 id="_18-进阶-faq-极致细化补充" tabindex="-1">18. 进阶 FAQ 极致细化补充 <a class="header-anchor" href="#_18-进阶-faq-极致细化补充" aria-label="Permalink to &quot;18. 进阶 FAQ 极致细化补充&quot;">​</a></h2><h3 id="q-多租户安全隔离的最佳实践" tabindex="-1">Q: 多租户安全隔离的最佳实践？ <a class="header-anchor" href="#q-多租户安全隔离的最佳实践" aria-label="Permalink to &quot;Q: 多租户安全隔离的最佳实践？&quot;">​</a></h3><p>A: 结合数据库级、应用级隔离，所有查询自动拼接租户条件，接口/数据/缓存全链路隔离，租户上下文用ThreadLocal或JWT扩展字段传递。</p><h3 id="q-微服务安全的统一认证、授权、审计、追踪全链路方案" tabindex="-1">Q: 微服务安全的统一认证、授权、审计、追踪全链路方案？ <a class="header-anchor" href="#q-微服务安全的统一认证、授权、审计、追踪全链路方案" aria-label="Permalink to &quot;Q: 微服务安全的统一认证、授权、审计、追踪全链路方案？&quot;">​</a></h3><p>A: 统一认证中心（OAuth2/JWT），网关统一鉴权，链路追踪（Sleuth/Zipkin），日志审计，权限变更消息总线同步。</p><h3 id="q-权限穿透攻防演练与防御" tabindex="-1">Q: 权限穿透攻防演练与防御？ <a class="header-anchor" href="#q-权限穿透攻防演练与防御" aria-label="Permalink to &quot;Q: 权限穿透攻防演练与防御？&quot;">​</a></h3><p>A: 攻击：伪造Token/越权接口/参数篡改。防御：接口幂等性、后端二次鉴权、敏感操作二次确认、参数签名。</p><h3 id="q-分布式会话同步的高可用与容灾设计" tabindex="-1">Q: 分布式会话同步的高可用与容灾设计？ <a class="header-anchor" href="#q-分布式会话同步的高可用与容灾设计" aria-label="Permalink to &quot;Q: 分布式会话同步的高可用与容灾设计？&quot;">​</a></h3><p>A: Redis集群+消息队列同步会话，主备切换自动迁移，节点故障自动剔除，定期备份。</p><hr><blockquote><p>本文档已极致细化 Spring Security 全部核心与进阶知识点，适合企业级安全架构设计、攻防实战与面试深度准备。</p></blockquote>`,178)]))}const o=i(e,[["render",t]]);export{c as __pageData,o as default};
