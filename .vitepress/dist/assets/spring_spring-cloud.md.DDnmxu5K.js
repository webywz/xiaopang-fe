import{_ as a,c as i,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const E=JSON.parse('{"title":"Spring Cloud 详解","description":"","frontmatter":{"title":"Spring Cloud 详解"},"headers":[],"relativePath":"spring/spring-cloud.md","filePath":"spring/spring-cloud.md","lastUpdated":1747111449000}'),e={name:"spring/spring-cloud.md"};function p(t,s,h,r,k,d){return n(),i("div",null,s[0]||(s[0]=[l(`<h1 id="spring-cloud-详解" tabindex="-1">Spring Cloud 详解 <a class="header-anchor" href="#spring-cloud-详解" aria-label="Permalink to &quot;Spring Cloud 详解&quot;">​</a></h1><hr><h2 id="_1-微服务架构与spring-cloud生态全景" tabindex="-1">1. 微服务架构与Spring Cloud生态全景 <a class="header-anchor" href="#_1-微服务架构与spring-cloud生态全景" aria-label="Permalink to &quot;1. 微服务架构与Spring Cloud生态全景&quot;">​</a></h2><h3 id="_1-1-微服务架构核心思想" tabindex="-1">1.1 微服务架构核心思想 <a class="header-anchor" href="#_1-1-微服务架构核心思想" aria-label="Permalink to &quot;1.1 微服务架构核心思想&quot;">​</a></h3><ul><li>单体→SOA→微服务演进</li><li>服务自治、去中心化、弹性伸缩、自动化运维</li><li>典型微服务架构图：</li></ul><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[API Gateway] --&gt; B[Service1]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A --&gt; C[Service2]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; D[DB1]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; E[DB2]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; F[Message Queue]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; F</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; G[Config Center]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; G</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; H[Discovery]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; H</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; I[Tracing]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; I</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="_1-2-spring-cloud-生态组件" tabindex="-1">1.2 Spring Cloud 生态组件 <a class="header-anchor" href="#_1-2-spring-cloud-生态组件" aria-label="Permalink to &quot;1.2 Spring Cloud 生态组件&quot;">​</a></h3><ul><li>注册中心：Eureka、Consul、Nacos</li><li>配置中心：Config、Nacos Config</li><li>服务调用：Feign、RestTemplate</li><li>负载均衡：Ribbon、Spring Cloud LoadBalancer</li><li>服务网关：Zuul、Gateway</li><li>容错熔断：Hystrix、Resilience4j、Sentinel</li><li>链路追踪：Sleuth、Zipkin、SkyWalking</li><li>消息驱动：Stream、Bus、Kafka、RocketMQ</li><li>分布式事务：Seata、TCC、SAGA</li><li>监控运维：Admin、Prometheus、Grafana</li></ul><h3 id="_1-3-典型全链路请求时序图" tabindex="-1">1.3 典型全链路请求时序图 <a class="header-anchor" href="#_1-3-典型全链路请求时序图" aria-label="Permalink to &quot;1.3 典型全链路请求时序图&quot;">​</a></h3><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sequenceDiagram</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant Client</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant Gateway</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant Nacos</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant ServiceA</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant ServiceB</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant MySQL</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    participant Zipkin</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Client-&gt;&gt;Gateway: HTTP请求</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Gateway-&gt;&gt;Nacos: 服务发现</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Gateway-&gt;&gt;ServiceA: 路由转发</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ServiceA-&gt;&gt;ServiceB: Feign调用</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ServiceB-&gt;&gt;MySQL: 数据库操作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ServiceA-&gt;&gt;Zipkin: 上报Trace</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ServiceB-&gt;&gt;Zipkin: 上报Trace</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Gateway--&gt;&gt;Client: 响应</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="_1-4-工程结构与ci-cd" tabindex="-1">1.4 工程结构与CI/CD <a class="header-anchor" href="#_1-4-工程结构与ci-cd" aria-label="Permalink to &quot;1.4 工程结构与CI/CD&quot;">​</a></h3><ul><li>推荐分层结构：api、service、common、gateway、config、monitor、deploy</li><li>关键配置：application.yml、bootstrap.yml、Dockerfile、Jenkinsfile、k8s-deployment.yaml</li></ul><hr><h2 id="_2-服务注册与发现极致细化" tabindex="-1">2. 服务注册与发现极致细化 <a class="header-anchor" href="#_2-服务注册与发现极致细化" aria-label="Permalink to &quot;2. 服务注册与发现极致细化&quot;">​</a></h2><h3 id="_2-1-原理与架构" tabindex="-1">2.1 原理与架构 <a class="header-anchor" href="#_2-1-原理与架构" aria-label="Permalink to &quot;2.1 原理与架构&quot;">​</a></h3><ul><li>服务实例启动时注册到注册中心，注册中心维护服务列表，客户端通过注册中心发现服务</li><li>支持健康检查、自动摘除、服务下线</li><li>架构图：</li></ul><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph LR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[ServiceA] --&gt; C[Registry]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B[ServiceB] --&gt; C</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    D[Client] --&gt; C</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_2-2-eureka" tabindex="-1">2.2 Eureka <a class="header-anchor" href="#_2-2-eureka" aria-label="Permalink to &quot;2.2 Eureka&quot;">​</a></h3><ul><li>核心原理：CAP理论下AP，心跳续约、剔除、注册表同步</li><li>关键源码：PeerAwareInstanceRegistryImpl、InstanceInfo、EurekaClient</li><li>配置示例：</li></ul><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  application</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service-a</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cloud</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    eureka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      client</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        service-url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          defaultZone</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://localhost:8761/eureka/</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>实战：高可用集群、只读注册表、保护模式</li><li>常见坑：自我保护导致脏数据、注册表同步延迟</li><li>最佳实践：生产环境多节点、关闭自我保护需谨慎</li></ul><h3 id="_2-3-consul-nacos" tabindex="-1">2.3 Consul/Nacos <a class="header-anchor" href="#_2-3-consul-nacos" aria-label="Permalink to &quot;2.3 Consul/Nacos&quot;">​</a></h3><ul><li>Consul：支持健康检查、KV存储、DNS发现</li><li>Nacos：AP/CP可切换、配置中心一体化、支持权重、元数据</li><li>Nacos配置示例：</li></ul><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cloud</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    nacos</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      discovery</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        server-addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">127.0.0.1:8848</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>实战：多集群、命名空间、分组、权重路由</li><li>源码：NacosNamingService、ServiceInfoHolder</li><li>常见坑：心跳丢失、元数据不一致</li><li>FAQ：如何实现多环境隔离？如何灰度发布？</li></ul><h3 id="_2-4-eureka-nacos-关键源码调用链" tabindex="-1">2.4 Eureka/Nacos 关键源码调用链 <a class="header-anchor" href="#_2-4-eureka-nacos-关键源码调用链" aria-label="Permalink to &quot;2.4 Eureka/Nacos 关键源码调用链&quot;">​</a></h3><ul><li>Eureka注册：DiscoveryClient#register -&gt; PeerAwareInstanceRegistryImpl#register</li><li>Nacos注册：NacosNamingService#registerInstance -&gt; NamingProxy#registerService</li><li>服务发现：RibbonLoadBalancerClient/LoadBalancerClient -&gt; NacosNamingService#getAllInstances</li></ul><h3 id="_2-5-注册中心高可用k8s部署yaml" tabindex="-1">2.5 注册中心高可用K8s部署YAML <a class="header-anchor" href="#_2-5-注册中心高可用k8s部署yaml" aria-label="Permalink to &quot;2.5 注册中心高可用K8s部署YAML&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">apiVersion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">apps/v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Deployment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos-server</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  replicas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  selector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    matchLabels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    metadata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        app</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    spec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      containers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nacos/nacos-server:latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">containerPort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8848</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="_2-6-自动化健康检查脚本" tabindex="-1">2.6 自动化健康检查脚本 <a class="header-anchor" href="#_2-6-自动化健康检查脚本" aria-label="Permalink to &quot;2.6 自动化健康检查脚本&quot;">​</a></h3><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:8848/nacos/v1/console/health/live</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><h2 id="_3-负载均衡与服务调用极致细化" tabindex="-1">3. 负载均衡与服务调用极致细化 <a class="header-anchor" href="#_3-负载均衡与服务调用极致细化" aria-label="Permalink to &quot;3. 负载均衡与服务调用极致细化&quot;">​</a></h2><h3 id="_3-1-ribbon-spring-cloud-loadbalancer" tabindex="-1">3.1 Ribbon/Spring Cloud LoadBalancer <a class="header-anchor" href="#_3-1-ribbon-spring-cloud-loadbalancer" aria-label="Permalink to &quot;3.1 Ribbon/Spring Cloud LoadBalancer&quot;">​</a></h3><ul><li>Ribbon已废弃，推荐Spring Cloud LoadBalancer</li><li>负载均衡策略：轮询、随机、加权、最小连接数</li><li>源码：RoundRobinLoadBalancer、RandomLoadBalancer</li><li>配置：</li></ul><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cloud</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    loadbalancer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      ribbon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        NFLoadBalancerRuleClassName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">com.netflix.loadbalancer.RandomRule</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>性能调优：连接池、超时、重试、熔断</li><li>监控：Micrometer、Prometheus</li></ul><h3 id="_3-2-feign" tabindex="-1">3.2 Feign <a class="header-anchor" href="#_3-2-feign" aria-label="Permalink to &quot;3.2 Feign&quot;">​</a></h3><ul><li>声明式HTTP客户端，支持负载均衡、熔断、拦截器</li><li>配置：</li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FeignClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;service-b&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GetMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/api/data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    String </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>源码：SynchronousMethodHandler、FeignClientFactoryBean</li><li>性能调优：连接池、超时、重试、压缩</li><li>常见坑：Feign调用链路丢失、参数传递问题</li><li>FAQ：如何自定义拦截器？如何传递Token？</li></ul><h3 id="_3-3-ribbon-loadbalancer-源码流程" tabindex="-1">3.3 Ribbon/LoadBalancer 源码流程 <a class="header-anchor" href="#_3-3-ribbon-loadbalancer-源码流程" aria-label="Permalink to &quot;3.3 Ribbon/LoadBalancer 源码流程&quot;">​</a></h3><ul><li>Ribbon：RestTemplate -&gt; RibbonLoadBalancerClient -&gt; ILoadBalancer -&gt; ServerList</li><li>LoadBalancer：LoadBalancerClient -&gt; ServiceInstanceListSupplier -&gt; LoadBalancer</li></ul><h3 id="_3-4-feign调用链源码" tabindex="-1">3.4 Feign调用链源码 <a class="header-anchor" href="#_3-4-feign调用链源码" aria-label="Permalink to &quot;3.4 Feign调用链源码&quot;">​</a></h3><ul><li>FeignClient -&gt; SynchronousMethodHandler -&gt; LoadBalancerClient -&gt; HTTP</li></ul><h3 id="_3-5-feign全链路追踪与token传递" tabindex="-1">3.5 Feign全链路追踪与Token传递 <a class="header-anchor" href="#_3-5-feign全链路追踪与token传递" aria-label="Permalink to &quot;3.5 Feign全链路追踪与Token传递&quot;">​</a></h3><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> FeignConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> implements</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RequestInterceptor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> apply</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(RequestTemplate </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">template</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        template.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Authorization&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getToken</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        template.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;X-B3-TraceId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, MDC.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;traceId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><hr><h2 id="_4-配置中心极致细化" tabindex="-1">4. 配置中心极致细化 <a class="header-anchor" href="#_4-配置中心极致细化" aria-label="Permalink to &quot;4. 配置中心极致细化&quot;">​</a></h2><h3 id="_4-1-spring-cloud-config-nacos-config" tabindex="-1">4.1 Spring Cloud Config/Nacos Config <a class="header-anchor" href="#_4-1-spring-cloud-config-nacos-config" aria-label="Permalink to &quot;4.1 Spring Cloud Config/Nacos Config&quot;">​</a></h3><ul><li>原理：集中管理配置，支持动态刷新、灰度发布、加密</li><li>架构图：</li></ul><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[Config Server] --&gt; B[Git/Nacos]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C[ServiceA] --&gt; A</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    D[ServiceB] --&gt; A</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>配置：</li></ul><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cloud</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      uri</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://localhost:8888</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service-a</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      profile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">dev</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">master</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>动态刷新：@RefreshScope、/actuator/refresh</li><li>灰度发布：多配置集、灰度规则</li><li>源码：EnvironmentRepository、NacosConfigService</li><li>常见坑：配置推送延迟、刷新失效</li><li>FAQ：如何加密敏感配置？如何多环境隔离？</li></ul><h3 id="_4-2-nacos-config-热更新流程源码" tabindex="-1">4.2 Nacos Config 热更新流程源码 <a class="header-anchor" href="#_4-2-nacos-config-热更新流程源码" aria-label="Permalink to &quot;4.2 Nacos Config 热更新流程源码&quot;">​</a></h3><ul><li>NacosConfigService#addListener -&gt; ClientWorker#checkConfigInfo -&gt; ConfigChangeListener</li></ul><h3 id="_4-3-配置中心安全攻防演练" tabindex="-1">4.3 配置中心安全攻防演练 <a class="header-anchor" href="#_4-3-配置中心安全攻防演练" aria-label="Permalink to &quot;4.3 配置中心安全攻防演练&quot;">​</a></h3><ul><li>攻击：伪造推送、配置劫持</li><li>防御：接口签名、IP白名单、敏感配置加密</li></ul><h3 id="_4-4-配置中心自动化检测脚本" tabindex="-1">4.4 配置中心自动化检测脚本 <a class="header-anchor" href="#_4-4-配置中心自动化检测脚本" aria-label="Permalink to &quot;4.4 配置中心自动化检测脚本&quot;">​</a></h3><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -sf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> http://localhost:8848/nacos/v1/cs/configs?dataId=xxx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> exit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><h2 id="_5-服务网关极致细化" tabindex="-1">5. 服务网关极致细化 <a class="header-anchor" href="#_5-服务网关极致细化" aria-label="Permalink to &quot;5. 服务网关极致细化&quot;">​</a></h2><h3 id="_5-1-zuul-gateway" tabindex="-1">5.1 Zuul/Gateway <a class="header-anchor" href="#_5-1-zuul-gateway" aria-label="Permalink to &quot;5.1 Zuul/Gateway&quot;">​</a></h3><ul><li>Zuul（1.x）基于Servlet，Gateway基于WebFlux，推荐Gateway</li><li>路由、限流、鉴权、灰度、熔断、监控</li><li>架构图：</li></ul><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[Client] --&gt; B[Gateway]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; C[ServiceA]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; D[ServiceB]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>Gateway配置：</li></ul><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cloud</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    gateway</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      routes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">service-a</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          uri</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">lb://service-a</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          predicates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Path=/api/a/**</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          filters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">StripPrefix=1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li>源码：RoutePredicateFactory、NettyRoutingFilter</li><li>实战：自定义Filter、全局异常、限流（RedisRateLimiter）、鉴权（JWT/OAuth2）</li><li>灰度发布：自定义路由规则、权重路由</li><li>监控：Prometheus、Sleuth</li><li>常见坑：WebFlux编程模型、Filter顺序</li><li>FAQ：如何实现灰度？如何自定义全局异常？</li></ul><h3 id="_5-2-gateway-路由与filter源码流程" tabindex="-1">5.2 Gateway 路由与Filter源码流程 <a class="header-anchor" href="#_5-2-gateway-路由与filter源码流程" aria-label="Permalink to &quot;5.2 Gateway 路由与Filter源码流程&quot;">​</a></h3><ul><li>RoutePredicateHandlerMapping -&gt; FilteringWebHandler -&gt; GlobalFilter -&gt; NettyRoutingFilter</li></ul><h3 id="_5-3-gateway灰度发布实战" tabindex="-1">5.3 Gateway灰度发布实战 <a class="header-anchor" href="#_5-3-gateway灰度发布实战" aria-label="Permalink to &quot;5.3 Gateway灰度发布实战&quot;">​</a></h3><ul><li>自定义路由Predicate，基于Header/参数/权重灰度</li></ul><h3 id="_5-4-gateway安全攻防演练" tabindex="-1">5.4 Gateway安全攻防演练 <a class="header-anchor" href="#_5-4-gateway安全攻防演练" aria-label="Permalink to &quot;5.4 Gateway安全攻防演练&quot;">​</a></h3><ul><li>攻击：路由穿透、参数注入、XSS</li><li>防御：全局签名校验、参数校验、CORS、限流</li></ul><hr><h2 id="_6-服务容错与熔断极致细化" tabindex="-1">6. 服务容错与熔断极致细化 <a class="header-anchor" href="#_6-服务容错与熔断极致细化" aria-label="Permalink to &quot;6. 服务容错与熔断极致细化&quot;">​</a></h2><h3 id="_6-1-hystrix-resilience4j-sentinel" tabindex="-1">6.1 Hystrix/Resilience4j/Sentinel <a class="header-anchor" href="#_6-1-hystrix-resilience4j-sentinel" aria-label="Permalink to &quot;6.1 Hystrix/Resilience4j/Sentinel&quot;">​</a></h3><ul><li>Hystrix已停更，推荐Resilience4j/Sentinel</li><li>熔断、限流、降级、隔离、重试、监控</li><li>架构图：</li></ul><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[Client] --&gt; B[Gateway] --&gt; C[ServiceA]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; D[ServiceB]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    C --&gt; E[Hystrix/Sentinel]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    D --&gt; E</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>Resilience4j配置：</li></ul><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">resilience4j</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  circuitbreaker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    instances</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      serviceA</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        registerHealthIndicator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        slidingWindowSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        failureRateThreshold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        waitDurationInOpenState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10s</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li>Sentinel控制台、规则推送、热点参数限流</li><li>源码：CircuitBreaker、SentinelSlotChain</li><li>实战：自定义降级、Fallback、监控告警</li><li>常见坑：线程池隔离、限流规则同步</li><li>FAQ：如何自定义降级？如何监控熔断？</li></ul><h3 id="_6-2-resilience4j-sentinel-源码流程" tabindex="-1">6.2 Resilience4j/Sentinel 源码流程 <a class="header-anchor" href="#_6-2-resilience4j-sentinel-源码流程" aria-label="Permalink to &quot;6.2 Resilience4j/Sentinel 源码流程&quot;">​</a></h3><ul><li>Resilience4j：CircuitBreakerAspect -&gt; CircuitBreakerStateMachine</li><li>Sentinel：SentinelResourceAspect -&gt; SlotChain -&gt; FlowSlot/DegradeSlot</li></ul><h3 id="_6-3-熔断降级自动化测试脚本" tabindex="-1">6.3 熔断降级自动化测试脚本 <a class="header-anchor" href="#_6-3-熔断降级自动化测试脚本" aria-label="Permalink to &quot;6.3 熔断降级自动化测试脚本&quot;">​</a></h3><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Test</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> testCircuitBreaker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            restTemplate.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getForObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://service-a/api/test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, String.class);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Exception </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 统计熔断次数</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><hr><h2 id="_7-分布式链路追踪极致细化" tabindex="-1">7. 分布式链路追踪极致细化 <a class="header-anchor" href="#_7-分布式链路追踪极致细化" aria-label="Permalink to &quot;7. 分布式链路追踪极致细化&quot;">​</a></h2><h3 id="_7-1-sleuth-zipkin-skywalking" tabindex="-1">7.1 Sleuth/Zipkin/SkyWalking <a class="header-anchor" href="#_7-1-sleuth-zipkin-skywalking" aria-label="Permalink to &quot;7.1 Sleuth/Zipkin/SkyWalking&quot;">​</a></h3><ul><li>Sleuth自动埋点，Zipkin/SkyWalking收集与展示</li><li>TraceId/SpanId传递、调用链分析、性能瓶颈定位</li><li>架构图：</li></ul><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[Client] --&gt; B[Gateway] --&gt; C[ServiceA] --&gt; D[ServiceB] --&gt; E[Zipkin/SkyWalking]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>配置：</li></ul><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  sleuth</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    sampler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      probability</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  zipkin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    base-url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">http://localhost:9411</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li>源码：Tracer、BraveSpan、Reporter</li><li>实战：自定义Span、日志链路追踪、异常告警</li><li>常见坑：Trace丢失、异步线程传递</li><li>FAQ：如何自定义埋点？如何与ELK集成？</li></ul><h3 id="_7-2-sleuth-zipkin-skywalking-源码与埋点" tabindex="-1">7.2 Sleuth/Zipkin/SkyWalking 源码与埋点 <a class="header-anchor" href="#_7-2-sleuth-zipkin-skywalking-源码与埋点" aria-label="Permalink to &quot;7.2 Sleuth/Zipkin/SkyWalking 源码与埋点&quot;">​</a></h3><ul><li>Sleuth：Tracer -&gt; Span -&gt; Reporter</li><li>Zipkin：BraveTracer -&gt; AsyncReporter -&gt; ZipkinCollector</li></ul><h3 id="_7-3-日志链路追踪与elk集成" tabindex="-1">7.3 日志链路追踪与ELK集成 <a class="header-anchor" href="#_7-3-日志链路追踪与elk集成" aria-label="Permalink to &quot;7.3 日志链路追踪与ELK集成&quot;">​</a></h3><ul><li>日志格式：<code>[%X{traceId},%X{spanId}]</code>，ELK按traceId聚合</li></ul><hr><h2 id="_8-消息驱动与事件总线极致细化" tabindex="-1">8. 消息驱动与事件总线极致细化 <a class="header-anchor" href="#_8-消息驱动与事件总线极致细化" aria-label="Permalink to &quot;8. 消息驱动与事件总线极致细化&quot;">​</a></h2><h3 id="_8-1-stream-bus-kafka-rocketmq" tabindex="-1">8.1 Stream/Bus/Kafka/RocketMQ <a class="header-anchor" href="#_8-1-stream-bus-kafka-rocketmq" aria-label="Permalink to &quot;8.1 Stream/Bus/Kafka/RocketMQ&quot;">​</a></h3><ul><li>Stream统一消息编程模型，Bus事件广播，Kafka/RocketMQ高吞吐</li><li>架构图：</li></ul><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[ServiceA] --&gt; B[Bus/Stream] --&gt; C[ServiceB]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    B --&gt; D[Kafka/RocketMQ]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>配置：</li></ul><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cloud</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    stream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      binders</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        kafka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">kafka</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          environment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">            spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">              kafka</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">                bootstrap-servers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">localhost:9092</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      bindings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        input</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          destination</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">topic-in</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">group1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        output</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          destination</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">topic-out</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><ul><li>源码：Binder、MessageChannel、RocketMQTemplate</li><li>实战：消息可靠性、幂等、重试、死信队列</li><li>监控：消息堆积、消费延迟、告警</li><li>常见坑：消息丢失、重复消费、顺序性</li><li>FAQ：如何保证消息可靠？如何处理重复消费？</li></ul><h3 id="_8-2-rocketmq-kafka-可靠消息源码" tabindex="-1">8.2 RocketMQ/Kafka 可靠消息源码 <a class="header-anchor" href="#_8-2-rocketmq-kafka-可靠消息源码" aria-label="Permalink to &quot;8.2 RocketMQ/Kafka 可靠消息源码&quot;">​</a></h3><ul><li>RocketMQTemplate#syncSend -&gt; DefaultMQProducer#send</li><li>KafkaTemplate#send -&gt; KafkaProducer#send</li></ul><h3 id="_8-3-消息幂等与自动化测试" tabindex="-1">8.3 消息幂等与自动化测试 <a class="header-anchor" href="#_8-3-消息幂等与自动化测试" aria-label="Permalink to &quot;8.3 消息幂等与自动化测试&quot;">​</a></h3><ul><li>消费端幂等：唯一业务ID+去重表/Redis</li><li>自动化测试：JMeter/pytest-kafka</li></ul><hr><h2 id="_9-分布式事务极致细化" tabindex="-1">9. 分布式事务极致细化 <a class="header-anchor" href="#_9-分布式事务极致细化" aria-label="Permalink to &quot;9. 分布式事务极致细化&quot;">​</a></h2><h3 id="_9-1-seata-tcc-saga" tabindex="-1">9.1 Seata/TCC/SAGA <a class="header-anchor" href="#_9-1-seata-tcc-saga" aria-label="Permalink to &quot;9.1 Seata/TCC/SAGA&quot;">​</a></h3><ul><li>Seata：AT、TCC、SAGA、XA多模式</li><li>TCC：Try-Confirm-Cancel，业务侵入</li><li>SAGA：长事务补偿，适合异步</li><li>架构图：</li></ul><div class="language-mermaid vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">mermaid</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">graph TD</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    A[ServiceA] --&gt; B[Seata/TCC/SAGA] --&gt; C[ServiceB]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>配置：</li></ul><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">spring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  cloud</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    alibaba</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      seata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        tx-service-group</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">my_tx_group</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>源码：DataSourceProxy、GlobalTransactionScanner</li><li>实战：分布式事务注解、回滚、补偿、幂等</li><li>常见坑：全局锁性能、脏数据、补偿幂等</li><li>FAQ：如何保证幂等？如何处理回滚失败？</li></ul><h3 id="_9-2-seata全局事务源码" tabindex="-1">9.2 Seata全局事务源码 <a class="header-anchor" href="#_9-2-seata全局事务源码" aria-label="Permalink to &quot;9.2 Seata全局事务源码&quot;">​</a></h3><ul><li>GlobalTransactionScanner -&gt; DataSourceProxy -&gt; UndoLog</li><li>TCC：TccActionInterceptor -&gt; Try/Confirm/Cancel</li></ul><h3 id="_9-3-分布式事务自动化回滚测试" tabindex="-1">9.3 分布式事务自动化回滚测试 <a class="header-anchor" href="#_9-3-分布式事务自动化回滚测试" aria-label="Permalink to &quot;9.3 分布式事务自动化回滚测试&quot;">​</a></h3><ul><li>事务注解+异常抛出，验证全局回滚</li></ul><hr><h2 id="_10-全链路安全设计与攻防极致细化" tabindex="-1">10. 全链路安全设计与攻防极致细化 <a class="header-anchor" href="#_10-全链路安全设计与攻防极致细化" aria-label="Permalink to &quot;10. 全链路安全设计与攻防极致细化&quot;">​</a></h2><h3 id="_10-1-注册中心、配置中心安全" tabindex="-1">10.1 注册中心、配置中心安全 <a class="header-anchor" href="#_10-1-注册中心、配置中心安全" aria-label="Permalink to &quot;10.1 注册中心、配置中心安全&quot;">​</a></h3><ul><li>权限认证、接口签名、IP白名单、加密传输</li><li>注册中心防注册泛洪、配置中心敏感配置加密</li></ul><h3 id="_10-2-网关安全" tabindex="-1">10.2 网关安全 <a class="header-anchor" href="#_10-2-网关安全" aria-label="Permalink to &quot;10.2 网关安全&quot;">​</a></h3><ul><li>JWT/OAuth2鉴权、接口签名、限流、黑白名单、CORS</li><li>防止路由穿透、路径遍历、参数注入</li></ul><h3 id="_10-3-链路追踪与消息安全" tabindex="-1">10.3 链路追踪与消息安全 <a class="header-anchor" href="#_10-3-链路追踪与消息安全" aria-label="Permalink to &quot;10.3 链路追踪与消息安全&quot;">​</a></h3><ul><li>TraceId防伪造、日志脱敏、消息加密、幂等</li></ul><h3 id="_10-4-分布式事务安全" tabindex="-1">10.4 分布式事务安全 <a class="header-anchor" href="#_10-4-分布式事务安全" aria-label="Permalink to &quot;10.4 分布式事务安全&quot;">​</a></h3><ul><li>事务日志加密、补偿操作鉴权、回滚防重放</li></ul><h3 id="_10-5-攻防演练与自动化测试" tabindex="-1">10.5 攻防演练与自动化测试 <a class="header-anchor" href="#_10-5-攻防演练与自动化测试" aria-label="Permalink to &quot;10.5 攻防演练与自动化测试&quot;">​</a></h3><ul><li>集成OWASP ZAP、trivy、Prometheus告警、自动化脚本</li><li>常见漏洞Payload与修复</li></ul><h3 id="_10-6-注册中心-网关-消息-链路追踪安全攻防脚本" tabindex="-1">10.6 注册中心/网关/消息/链路追踪安全攻防脚本 <a class="header-anchor" href="#_10-6-注册中心-网关-消息-链路追踪安全攻防脚本" aria-label="Permalink to &quot;10.6 注册中心/网关/消息/链路追踪安全攻防脚本&quot;">​</a></h3><ul><li>注册中心注册泛洪脚本、网关路径遍历脚本、消息重放脚本、TraceId伪造脚本</li></ul><hr><h2 id="_11-生产环境部署、监控、自动化运维极致细化" tabindex="-1">11. 生产环境部署、监控、自动化运维极致细化 <a class="header-anchor" href="#_11-生产环境部署、监控、自动化运维极致细化" aria-label="Permalink to &quot;11. 生产环境部署、监控、自动化运维极致细化&quot;">​</a></h2><h3 id="_11-1-部署架构与ci-cd" tabindex="-1">11.1 部署架构与CI/CD <a class="header-anchor" href="#_11-1-部署架构与ci-cd" aria-label="Permalink to &quot;11.1 部署架构与CI/CD&quot;">​</a></h3><ul><li>多环境隔离、蓝绿/灰度发布、自动化回滚</li><li>Jenkins/GitLab CI、K8s、Helm、ArgoCD</li><li>配置示例：Jenkinsfile、Helm values.yaml</li></ul><h3 id="_11-2-监控与告警" tabindex="-1">11.2 监控与告警 <a class="header-anchor" href="#_11-2-监控与告警" aria-label="Permalink to &quot;11.2 监控与告警&quot;">​</a></h3><ul><li>Prometheus、Grafana、Spring Boot Admin、ELK</li><li>监控指标：QPS、RT、错误率、服务健康、消息堆积</li><li>告警脚本与自动化处理</li></ul><h3 id="_11-3-弹性伸缩与自愈" tabindex="-1">11.3 弹性伸缩与自愈 <a class="header-anchor" href="#_11-3-弹性伸缩与自愈" aria-label="Permalink to &quot;11.3 弹性伸缩与自愈&quot;">​</a></h3><ul><li>K8s HPA、Pod自动重启、服务自注册/摘除</li><li>生产环境常见故障与应急预案</li></ul><h3 id="_11-4-jenkinsfile-helm部署模板" tabindex="-1">11.4 Jenkinsfile/Helm部署模板 <a class="header-anchor" href="#_11-4-jenkinsfile-helm部署模板" aria-label="Permalink to &quot;11.4 Jenkinsfile/Helm部署模板&quot;">​</a></h3><div class="language-groovy vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">groovy</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pipeline {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  agent any</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  stages {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    stage(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Build&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { steps { sh </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mvn clean package&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    stage(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Docker&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { steps { sh </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;docker build -t myapp:latest .&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    stage(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Deploy&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) { steps { sh </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;helm upgrade --install myapp ./chart&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_11-5-prometheus告警规则" tabindex="-1">11.5 Prometheus告警规则 <a class="header-anchor" href="#_11-5-prometheus告警规则" aria-label="Permalink to &quot;11.5 Prometheus告警规则&quot;">​</a></h3><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">HighErrorRate</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  expr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sum(rate(http_server_errors_total[5m])) by (service) &gt; 5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1m</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  labels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    severity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">critical</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  annotations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    summary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;高错误率告警&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><hr><h2 id="_12-常见问题与faq、面试高频题、最佳实践极致细化" tabindex="-1">12. 常见问题与FAQ、面试高频题、最佳实践极致细化 <a class="header-anchor" href="#_12-常见问题与faq、面试高频题、最佳实践极致细化" aria-label="Permalink to &quot;12. 常见问题与FAQ、面试高频题、最佳实践极致细化&quot;">​</a></h2><h3 id="_12-1-faq" tabindex="-1">12.1 FAQ <a class="header-anchor" href="#_12-1-faq" aria-label="Permalink to &quot;12.1 FAQ&quot;">​</a></h3><ul><li>服务注册失败如何排查？</li><li>配置中心推送延迟如何优化？</li><li>Feign调用超时/重试如何配置？</li><li>Gateway限流如何自定义？</li><li>Sentinel规则如何动态推送？</li><li>Seata事务回滚失败怎么办？</li><li>消息丢失/重复消费如何处理？</li><li>链路追踪Trace丢失如何排查？</li><li>K8s弹性伸缩如何调优？</li></ul><h3 id="_12-2-面试高频题" tabindex="-1">12.2 面试高频题 <a class="header-anchor" href="#_12-2-面试高频题" aria-label="Permalink to &quot;12.2 面试高频题&quot;">​</a></h3><ul><li>微服务与单体/分布式架构对比</li><li>Eureka/Consul/Nacos原理与区别</li><li>Ribbon与LoadBalancer区别</li><li>Feign与RestTemplate区别</li><li>Gateway与Zuul区别</li><li>Hystrix与Resilience4j/Sentinel对比</li><li>分布式事务三种模式原理</li><li>链路追踪原理与TraceId传递</li><li>消息可靠性与幂等设计</li><li>全链路安全设计要点</li></ul><h3 id="_12-3-最佳实践" tabindex="-1">12.3 最佳实践 <a class="header-anchor" href="#_12-3-最佳实践" aria-label="Permalink to &quot;12.3 最佳实践&quot;">​</a></h3><ul><li>组件选型建议（如注册中心、网关、熔断、链路追踪）</li><li>配置管理与多环境隔离</li><li>灰度发布与回滚</li><li>自动化测试与CI/CD</li><li>监控告警与应急预案</li><li>安全合规与攻防演练</li></ul><h3 id="_12-4-高频面试题与标准答案" tabindex="-1">12.4 高频面试题与标准答案 <a class="header-anchor" href="#_12-4-高频面试题与标准答案" aria-label="Permalink to &quot;12.4 高频面试题与标准答案&quot;">​</a></h3><ul><li>Q: Eureka与Nacos的区别？ A: Eureka AP，Nacos AP/CP可切换，Nacos支持配置中心、权重、元数据，Eureka已停更。</li><li>Q: Feign如何实现负载均衡？ A: 通过LoadBalancerClient自动选择服务实例，支持多种负载均衡策略。</li><li>Q: 分布式事务三种模式？ A: AT自动补偿、TCC三段、SAGA长事务补偿，Seata支持多模式。</li><li>Q: Gateway如何实现灰度发布？ A: 自定义路由Predicate，基于Header/参数/权重分流。</li></ul><hr><h1 id="真实案例与架构演进" tabindex="-1">真实案例与架构演进 <a class="header-anchor" href="#真实案例与架构演进" aria-label="Permalink to &quot;真实案例与架构演进&quot;">​</a></h1><ul><li>某大型互联网公司Spring Cloud落地架构演进图、踩坑与优化经验</li><li>多云/混合云/多活容灾架构设计与实战</li><li>典型QPS、RT、并发数、消息堆积等监控指标阈值建议</li><li>生产环境常见故障与应急预案模板</li></ul><hr><blockquote><p>本文档已极致细化 Spring Cloud 全部核心与进阶知识点，适合企业级微服务架构设计、攻防实战与面试深度准备。</p></blockquote>`,164)]))}const o=a(e,[["render",p]]);export{E as __pageData,o as default};
