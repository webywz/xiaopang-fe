import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"自动化部署","description":"","frontmatter":{"title":"自动化部署"},"headers":[],"relativePath":"solidity/automation.md","filePath":"solidity/automation.md","lastUpdated":1747119657000}'),e={name:"solidity/automation.md"};function t(h,s,p,r,k,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="自动化部署" tabindex="-1">自动化部署 <a class="header-anchor" href="#自动化部署" aria-label="Permalink to &quot;自动化部署&quot;">​</a></h1><p>自动化部署是现代智能合约开发流程中不可或缺的一环，能够极大提升开发效率、减少人为失误、保障部署安全。</p><h2 id="_1-自动化部署的意义" tabindex="-1">1. 自动化部署的意义 <a class="header-anchor" href="#_1-自动化部署的意义" aria-label="Permalink to &quot;1. 自动化部署的意义&quot;">​</a></h2><ul><li>降低手动操作风险，避免因命令失误导致主网损失。</li><li>支持多环境（测试网/主网）一键部署，便于团队协作。</li><li>可集成持续集成（CI）和持续部署（CD）流程，实现自动化测试和上线。</li></ul><h2 id="_2-常用自动化部署工具" tabindex="-1">2. 常用自动化部署工具 <a class="header-anchor" href="#_2-常用自动化部署工具" aria-label="Permalink to &quot;2. 常用自动化部署工具&quot;">​</a></h2><h3 id="_2-1-truffle部署脚本" tabindex="-1">2.1 Truffle部署脚本 <a class="header-anchor" href="#_2-1-truffle部署脚本" aria-label="Permalink to &quot;2.1 Truffle部署脚本&quot;">​</a></h3><ul><li>使用 <code>truffle migrate</code> 命令和 <code>migrations</code> 目录下的JS脚本自动部署。</li><li>支持多网络配置和合约依赖管理。</li></ul><h3 id="_2-2-hardhat部署脚本" tabindex="-1">2.2 Hardhat部署脚本 <a class="header-anchor" href="#_2-2-hardhat部署脚本" aria-label="Permalink to &quot;2.2 Hardhat部署脚本&quot;">​</a></h3><ul><li>使用 <code>npx hardhat run scripts/deploy.js --network xxx</code> 命令自动部署。</li><li>支持参数化、批量部署、合约升级等高级功能。</li></ul><h3 id="_2-3-foundry自动化部署" tabindex="-1">2.3 Foundry自动化部署 <a class="header-anchor" href="#_2-3-foundry自动化部署" aria-label="Permalink to &quot;2.3 Foundry自动化部署&quot;">​</a></h3><ul><li>使用 <code>forge script</code> 命令和Solidity脚本自动部署。</li><li>支持多链部署、批量操作、与硬件钱包集成。</li></ul><h2 id="_3-部署脚本编写与管理" tabindex="-1">3. 部署脚本编写与管理 <a class="header-anchor" href="#_3-部署脚本编写与管理" aria-label="Permalink to &quot;3. 部署脚本编写与管理&quot;">​</a></h2><h3 id="_3-1-配置网络与参数" tabindex="-1">3.1 配置网络与参数 <a class="header-anchor" href="#_3-1-配置网络与参数" aria-label="Permalink to &quot;3.1 配置网络与参数&quot;">​</a></h3><ul><li>在配置文件（如hardhat.config.js、truffle-config.js）中管理RPC、私钥、合约参数等。</li><li>推荐使用环境变量（.env）存储敏感信息。</li></ul><h3 id="_3-2-多合约批量部署" tabindex="-1">3.2 多合约批量部署 <a class="header-anchor" href="#_3-2-多合约批量部署" aria-label="Permalink to &quot;3.2 多合约批量部署&quot;">​</a></h3><ul><li>脚本可循环部署多个合约，自动记录合约地址和参数。</li><li>可自动执行合约初始化、权限分配等操作。</li></ul><h2 id="_4-部署流程与最佳实践" tabindex="-1">4. 部署流程与最佳实践 <a class="header-anchor" href="#_4-部署流程与最佳实践" aria-label="Permalink to &quot;4. 部署流程与最佳实践&quot;">​</a></h2><ul><li>部署前自动运行全部测试，确保合约安全。</li><li>部署后自动验证合约（如Etherscan验证）。</li><li>记录部署日志和合约地址，便于后续维护。</li><li>生产环境部署建议多签或人工审核。</li></ul><h2 id="_5-自动化部署中的安全注意事项" tabindex="-1">5. 自动化部署中的安全注意事项 <a class="header-anchor" href="#_5-自动化部署中的安全注意事项" aria-label="Permalink to &quot;5. 自动化部署中的安全注意事项&quot;">​</a></h2><ul><li>私钥、API密钥等敏感信息严禁硬编码，建议用环境变量管理。</li><li>部署脚本应有异常处理和回滚机制，防止中途失败导致状态不一致。</li><li>主网部署前务必多轮审计和测试。</li></ul><h2 id="_6-示例代码" tabindex="-1">6. 示例代码 <a class="header-anchor" href="#_6-示例代码" aria-label="Permalink to &quot;6. 示例代码&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Hardhat自动化部署脚本 scripts/deploy.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ethers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hardhat&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dotenv&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Demo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ethers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getContractFactory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Demo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> demo</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Demo.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deploy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> demo.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">deployed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Demo合约地址:&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, demo.address);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><div class="language-solidity vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">solidity</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// SPDX-License-Identifier: MIT</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">pragma</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> solidity</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ^0.8.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">contract</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Demo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  uint</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> value;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">uint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _v) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _v; }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_7-常见问题与最佳实践" tabindex="-1">7. 常见问题与最佳实践 <a class="header-anchor" href="#_7-常见问题与最佳实践" aria-label="Permalink to &quot;7. 常见问题与最佳实践&quot;">​</a></h2><ul><li><strong>所有敏感信息应使用环境变量管理</strong>，避免泄露。</li><li><strong>部署脚本应有详细注释和日志</strong>，便于排查问题。</li><li><strong>自动化部署前应自动运行全部测试</strong>，防止带病上线。</li><li><strong>建议集成Etherscan等合约验证服务</strong>，提升透明度。</li><li><strong>生产环境部署建议多签或人工审核</strong>，防止单点失误。</li></ul><hr><p>如需深入了解自动化部署和CI/CD集成的高级用法，可参考官方文档或本教程后续章节。</p>`,27)]))}const E=i(e,[["render",t]]);export{c as __pageData,E as default};
