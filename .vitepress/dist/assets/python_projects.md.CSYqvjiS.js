import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const o=JSON.parse('{"title":"实战项目","description":"","frontmatter":{"title":"实战项目"},"headers":[],"relativePath":"python/projects.md","filePath":"python/projects.md","lastUpdated":1747141758000}'),e={name:"python/projects.md"};function p(t,s,h,r,k,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="python-实战项目详解" tabindex="-1">Python 实战项目详解 <a class="header-anchor" href="#python-实战项目详解" aria-label="Permalink to &quot;Python 实战项目详解&quot;">​</a></h1><h2 id="_1-1-主题简介" tabindex="-1">1.1 主题简介 <a class="header-anchor" href="#_1-1-主题简介" aria-label="Permalink to &quot;1.1 主题简介&quot;">​</a></h2><p>通过实战项目可以系统提升 Python 编程能力，掌握从需求分析到开发、测试、部署的完整流程。</p><hr><h2 id="_1-2-项目选题思路" tabindex="-1">1.2 项目选题思路 <a class="header-anchor" href="#_1-2-项目选题思路" aria-label="Permalink to &quot;1.2 项目选题思路&quot;">​</a></h2><ul><li>结合兴趣、行业需求、技术热点选题。</li><li>建议从小型项目做起，逐步挑战中大型项目。</li><li>关注数据来源、用户需求、可扩展性。</li></ul><hr><h2 id="_1-3-常见项目类型与案例" tabindex="-1">1.3 常见项目类型与案例 <a class="header-anchor" href="#_1-3-常见项目类型与案例" aria-label="Permalink to &quot;1.3 常见项目类型与案例&quot;">​</a></h2><h3 id="_1-3-1-数据分析项目" tabindex="-1">1.3.1 数据分析项目 <a class="header-anchor" href="#_1-3-1-数据分析项目" aria-label="Permalink to &quot;1.3.1 数据分析项目&quot;">​</a></h3><h4 id="案例-销售数据分析" tabindex="-1">案例：销售数据分析 <a class="header-anchor" href="#案例-销售数据分析" aria-label="Permalink to &quot;案例：销售数据分析&quot;">​</a></h4><ul><li><strong>简介</strong>：分析销售数据，输出月度趋势、热销产品、用户画像。</li><li><strong>技术栈</strong>：pandas、matplotlib、seaborn</li><li><strong>核心功能</strong>：数据清洗、统计分析、可视化报表</li><li><strong>关键代码片段</strong>：</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> matplotlib.pyplot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plt</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sales.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;date&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.to_datetime(df[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;date&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">monthly </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> df.groupby(df[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;date&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].dt.to_period(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;M&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;amount&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].sum()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">monthly.plot()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plt.show()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><strong>进阶建议</strong>：加入自动邮件报告、交互式仪表盘（Dash/Streamlit）。</li></ul><h3 id="_1-3-2-web开发项目" tabindex="-1">1.3.2 Web开发项目 <a class="header-anchor" href="#_1-3-2-web开发项目" aria-label="Permalink to &quot;1.3.2 Web开发项目&quot;">​</a></h3><h4 id="案例-个人博客系统" tabindex="-1">案例：个人博客系统 <a class="header-anchor" href="#案例-个人博客系统" aria-label="Permalink to &quot;案例：个人博客系统&quot;">​</a></h4><ul><li><strong>简介</strong>：支持文章发布、评论、标签、后台管理。</li><li><strong>技术栈</strong>：Flask/Django、SQLite/MySQL、Bootstrap</li><li><strong>核心功能</strong>：用户认证、文章管理、评论系统、富文本编辑</li><li><strong>关键代码片段</strong>：</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flask </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Flask, render_template</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Flask(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">__name__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@app.route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> render_template(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;index.html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><strong>进阶建议</strong>：支持多用户、全文检索、RESTful API。</li></ul><h3 id="_1-3-3-爬虫项目" tabindex="-1">1.3.3 爬虫项目 <a class="header-anchor" href="#_1-3-3-爬虫项目" aria-label="Permalink to &quot;1.3.3 爬虫项目&quot;">​</a></h3><h4 id="案例-图片批量下载器" tabindex="-1">案例：图片批量下载器 <a class="header-anchor" href="#案例-图片批量下载器" aria-label="Permalink to &quot;案例：图片批量下载器&quot;">​</a></h4><ul><li><strong>简介</strong>：自动抓取指定网站图片并保存本地。</li><li><strong>技术栈</strong>：requests、BeautifulSoup、os</li><li><strong>核心功能</strong>：网页解析、图片下载、异常处理</li><li><strong>关键代码片段</strong>：</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bs4 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BeautifulSoup</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">soup </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BeautifulSoup(r.text, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;html.parser&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> img </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> soup.find_all(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;img&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    url </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> img[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    with</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(url.split(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;wb&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> f:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        f.write(requests.get(url).content)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><strong>进阶建议</strong>：多线程下载、断点续传、GUI 界面。</li></ul><h3 id="_1-3-4-自动化脚本项目" tabindex="-1">1.3.4 自动化脚本项目 <a class="header-anchor" href="#_1-3-4-自动化脚本项目" aria-label="Permalink to &quot;1.3.4 自动化脚本项目&quot;">​</a></h3><h4 id="案例-excel-批量处理工具" tabindex="-1">案例：Excel 批量处理工具 <a class="header-anchor" href="#案例-excel-批量处理工具" aria-label="Permalink to &quot;案例：Excel 批量处理工具&quot;">​</a></h4><ul><li><strong>简介</strong>：批量修改、合并、统计 Excel 文件。</li><li><strong>技术栈</strong>：pandas、openpyxl</li><li><strong>核心功能</strong>：文件遍历、数据处理、结果导出</li><li><strong>关键代码片段</strong>：</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_excel(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a.xlsx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;新列&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df.to_excel(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;b.xlsx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">False</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><strong>进阶建议</strong>：支持批量文件、命令行参数、定时任务。</li></ul><h3 id="_1-3-5-机器学习项目" tabindex="-1">1.3.5 机器学习项目 <a class="header-anchor" href="#_1-3-5-机器学习项目" aria-label="Permalink to &quot;1.3.5 机器学习项目&quot;">​</a></h3><h4 id="案例-房价预测" tabindex="-1">案例：房价预测 <a class="header-anchor" href="#案例-房价预测" aria-label="Permalink to &quot;案例：房价预测&quot;">​</a></h4><ul><li><strong>简介</strong>：用历史数据预测房价。</li><li><strong>技术栈</strong>：scikit-learn、pandas、matplotlib</li><li><strong>核心功能</strong>：特征工程、模型训练、结果可视化</li><li><strong>关键代码片段</strong>：</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sklearn.linear_model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LinearRegression</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;house.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> df[[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;area&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rooms&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> df[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;price&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LinearRegression().fit(X, y)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model.predict([[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><strong>进阶建议</strong>：模型调优、Web API 部署、自动化特征选择。</li></ul><h3 id="_1-3-6-可视化项目" tabindex="-1">1.3.6 可视化项目 <a class="header-anchor" href="#_1-3-6-可视化项目" aria-label="Permalink to &quot;1.3.6 可视化项目&quot;">​</a></h3><h4 id="案例-交互式数据仪表盘" tabindex="-1">案例：交互式数据仪表盘 <a class="header-anchor" href="#案例-交互式数据仪表盘" aria-label="Permalink to &quot;案例：交互式数据仪表盘&quot;">​</a></h4><ul><li><strong>简介</strong>：可视化展示多维数据，支持筛选、联动。</li><li><strong>技术栈</strong>：Dash/Streamlit、plotly、pandas</li><li><strong>核心功能</strong>：数据读取、交互式图表、Web 部署</li><li><strong>关键代码片段</strong>：</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> streamlit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> st</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">st.title(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;数据仪表盘&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">st.line_chart(df[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;value&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><strong>进阶建议</strong>：多图联动、权限管理、移动端适配。</li></ul><h3 id="_1-3-7-运维-devops-项目" tabindex="-1">1.3.7 运维/DevOps 项目 <a class="header-anchor" href="#_1-3-7-运维-devops-项目" aria-label="Permalink to &quot;1.3.7 运维/DevOps 项目&quot;">​</a></h3><h4 id="案例-批量远程主机健康检查" tabindex="-1">案例：批量远程主机健康检查 <a class="header-anchor" href="#案例-批量远程主机健康检查" aria-label="Permalink to &quot;案例：批量远程主机健康检查&quot;">​</a></h4><ul><li><strong>简介</strong>：自动检测多台主机的 CPU、内存、磁盘状态。</li><li><strong>技术栈</strong>：paramiko、psutil、fabric</li><li><strong>核心功能</strong>：SSH 远程、系统信息采集、告警</li><li><strong>关键代码片段</strong>：</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fabric </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Connection</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hosts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;host1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;host2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> h </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hosts:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Connection(h)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c.run(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;uptime&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).stdout)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li><strong>进阶建议</strong>：邮件/钉钉告警、Web 可视化、自动修复。</li></ul><hr><h2 id="_1-4-项目结构设计" tabindex="-1">1.4 项目结构设计 <a class="header-anchor" href="#_1-4-项目结构设计" aria-label="Permalink to &quot;1.4 项目结构设计&quot;">​</a></h2><ul><li>按功能模块分层（如 models、views、utils、tests）。</li><li>配置、数据、日志、脚本分离。</li><li>推荐用 requirements.txt 管理依赖。</li></ul><hr><h2 id="_1-5-开发流程与部署" tabindex="-1">1.5 开发流程与部署 <a class="header-anchor" href="#_1-5-开发流程与部署" aria-label="Permalink to &quot;1.5 开发流程与部署&quot;">​</a></h2><ol><li>需求分析与设计</li><li>环境搭建与依赖管理</li><li>编码与单元测试</li><li>集成测试与优化</li><li>部署上线（本地、服务器、云平台、Docker）</li><li>监控与维护</li></ol><hr><h2 id="_1-6-常见问题与解决" tabindex="-1">1.6 常见问题与解决 <a class="header-anchor" href="#_1-6-常见问题与解决" aria-label="Permalink to &quot;1.6 常见问题与解决&quot;">​</a></h2><ul><li>依赖冲突：用虚拟环境隔离。</li><li>数据丢失：定期备份，异常处理。</li><li>部署失败：检查配置、日志、端口占用。</li><li>性能瓶颈：用 profile 工具定位，优化算法或并发。</li></ul><h2 id="_1-7-最佳实践" tabindex="-1">1.7 最佳实践 <a class="header-anchor" href="#_1-7-最佳实践" aria-label="Permalink to &quot;1.7 最佳实践&quot;">​</a></h2><ul><li>代码规范、注释、文档齐全。</li><li>单元测试和集成测试覆盖核心逻辑。</li><li>日志记录关键操作和异常。</li><li>配置、密钥用环境变量管理。</li><li>持续集成与自动化部署。</li></ul><h2 id="_1-8-jsdoc-注释示例" tabindex="-1">1.8 JSDoc 注释示例 <a class="header-anchor" href="#_1-8-jsdoc-注释示例" aria-label="Permalink to &quot;1.8 JSDoc 注释示例&quot;">​</a></h2><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @param path {str} 文件路径</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @returns {DataFrame} 数据表</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> load_csv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(path):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    读取 CSV 文件为 DataFrame</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :param path: 文件路径</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :type path: str</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :return: 数据表</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :rtype: pandas.DataFrame</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(path)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="_1-9-相关资源" tabindex="-1">1.9 相关资源 <a class="header-anchor" href="#_1-9-相关资源" aria-label="Permalink to &quot;1.9 相关资源&quot;">​</a></h2><ul><li><a href="https://github.com/realpython/python-projects" target="_blank" rel="noreferrer">Python 项目实战精选</a></li><li><a href="https://github.com/krzjoa/awesome-python-data-science-projects" target="_blank" rel="noreferrer">Awesome Python Projects</a></li><li><a href="https://docs.streamlit.io/" target="_blank" rel="noreferrer">Streamlit 官方文档</a></li><li><a href="https://flask.palletsprojects.com/zh/" target="_blank" rel="noreferrer">Flask 官方文档</a></li><li><a href="https://docs.djangoproject.com/zh-hans/" target="_blank" rel="noreferrer">Django 官方文档</a></li><li><a href="https://scikit-learn.org.cn/" target="_blank" rel="noreferrer">scikit-learn 官方文档</a></li></ul><hr><blockquote><p>实战项目是提升编程能力的最佳途径，建议多做多练，注重总结与复盘。</p></blockquote><hr><h1 id="python-实战项目" tabindex="-1">Python 实战项目 <a class="header-anchor" href="#python-实战项目" aria-label="Permalink to &quot;Python 实战项目&quot;">​</a></h1><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li>项目选题与规划</li><li>典型实战项目案例</li><li>项目结构设计与最佳实践</li><li>代码组织与模块化</li><li>测试与文档</li><li>常见坑与实用技巧</li><li>FAQ</li><li>扩展阅读</li></ul><h2 id="项目选题与规划" tabindex="-1">项目选题与规划 <a class="header-anchor" href="#项目选题与规划" aria-label="Permalink to &quot;项目选题与规划&quot;">​</a></h2><ol><li>明确项目目标与需求（如数据分析、Web开发、自动化、爬虫、可视化、AI等）</li><li>评估技术栈与可行性</li><li>设计项目结构与开发计划</li><li>版本管理与协作（推荐使用 Git）</li></ol><h2 id="典型实战项目案例" tabindex="-1">典型实战项目案例 <a class="header-anchor" href="#典型实战项目案例" aria-label="Permalink to &quot;典型实战项目案例&quot;">​</a></h2><h3 id="_1-数据分析项目" tabindex="-1">1. 数据分析项目 <a class="header-anchor" href="#_1-数据分析项目" aria-label="Permalink to &quot;1. 数据分析项目&quot;">​</a></h3><ul><li>目标：分析某平台用户行为数据，输出可视化报告</li><li>技术：pandas、matplotlib、seaborn</li><li>结构： <ul><li>data/: 原始数据</li><li>analysis/: 数据清洗与分析脚本</li><li>report/: 可视化结果</li></ul></li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> matplotlib.pyplot </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plt</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data/users.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;age&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].hist()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plt.title(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;用户年龄分布&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plt.savefig(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;report/age_dist.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_2-web-应用项目" tabindex="-1">2. Web 应用项目 <a class="header-anchor" href="#_2-web-应用项目" aria-label="Permalink to &quot;2. Web 应用项目&quot;">​</a></h3><ul><li>目标：实现一个简易博客系统</li><li>技术：Flask、Jinja2、SQLite</li><li>结构： <ul><li>app/: 业务逻辑</li><li>templates/: 前端模板</li><li>static/: 静态资源</li><li>db/: 数据库文件</li></ul></li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> flask </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Flask, render_template</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Flask(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">__name__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@app.route</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> render_template(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;index.html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_3-自动化脚本项目" tabindex="-1">3. 自动化脚本项目 <a class="header-anchor" href="#_3-自动化脚本项目" aria-label="Permalink to &quot;3. 自动化脚本项目&quot;">​</a></h3><ul><li>目标：定时备份指定文件夹</li><li>技术：os、shutil、schedule</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> shutil, schedule, time</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> backup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    shutil.copytree(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;src&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;backup&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">schedule.every().day.at(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;02:00&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).do(backup)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    schedule.run_pending()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    time.sleep(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="_4-爬虫项目" tabindex="-1">4. 爬虫项目 <a class="header-anchor" href="#_4-爬虫项目" aria-label="Permalink to &quot;4. 爬虫项目&quot;">​</a></h3><ul><li>目标：批量抓取新闻标题</li><li>技术：requests、BeautifulSoup</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bs4 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BeautifulSoup</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://news.example.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">soup </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BeautifulSoup(resp.text, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;html.parser&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> h2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> soup.find_all(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;h2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(h2.text)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_5-可视化项目" tabindex="-1">5. 可视化项目 <a class="header-anchor" href="#_5-可视化项目" aria-label="Permalink to &quot;5. 可视化项目&quot;">​</a></h3><ul><li>目标：交互式展示销售数据</li><li>技术：plotly、dash</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dash, dash_core_components </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dcc, dash_html_components </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> html</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> plotly.express </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> px</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dash.Dash(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">__name__</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> px.bar(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">x</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;A&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;B&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">app.layout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> html.Div([dcc.Graph(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">figure</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fig)])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;__main__&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    app.run_server(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">debug</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_6-机器学习项目" tabindex="-1">6. 机器学习项目 <a class="header-anchor" href="#_6-机器学习项目" aria-label="Permalink to &quot;6. 机器学习项目&quot;">​</a></h3><ul><li>目标：预测房价</li><li>技术：scikit-learn、pandas</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sklearn.linear_model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LinearRegression</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pandas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data/feature.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pd.read_csv(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;data/target.csv&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LinearRegression().fit(X, y)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model.coef_)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="项目结构设计与最佳实践" tabindex="-1">项目结构设计与最佳实践 <a class="header-anchor" href="#项目结构设计与最佳实践" aria-label="Permalink to &quot;项目结构设计与最佳实践&quot;">​</a></h2><ul><li>目录清晰：data, src, tests, docs, scripts, notebooks, output</li><li>代码分层：数据、业务、接口、工具、配置</li><li>配置分离：用 config.py 或 .env 管理敏感信息</li><li>日志与异常处理：统一日志、详细异常</li><li>版本管理：.gitignore、README、requirements.txt</li></ul><h2 id="代码组织与模块化" tabindex="-1">代码组织与模块化 <a class="header-anchor" href="#代码组织与模块化" aria-label="Permalink to &quot;代码组织与模块化&quot;">​</a></h2><ul><li>每个功能单独模块，避免大文件</li><li>公共函数/类放 utils/</li><li>推荐使用包结构（<strong>init</strong>.py）</li><li>示例：</li></ul><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>project/</span></span>
<span class="line"><span>  ├── data/</span></span>
<span class="line"><span>  ├── src/</span></span>
<span class="line"><span>  │     ├── __init__.py</span></span>
<span class="line"><span>  │     ├── main.py</span></span>
<span class="line"><span>  │     ├── utils.py</span></span>
<span class="line"><span>  │     └── ...</span></span>
<span class="line"><span>  ├── tests/</span></span>
<span class="line"><span>  ├── requirements.txt</span></span>
<span class="line"><span>  └── README.md</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="测试与文档" tabindex="-1">测试与文档 <a class="header-anchor" href="#测试与文档" aria-label="Permalink to &quot;测试与文档&quot;">​</a></h2><ul><li>单元测试：pytest/unittest，tests/ 目录</li><li>文档：README.md、代码注释、JSDoc 风格</li><li>示例 JSDoc 注释：</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @param x {int} 输入值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @returns {int} 平方</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> square</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    计算平方</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :param x: 输入值</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :type x: int</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :return: 平方</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :rtype: int</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="常见坑与实用技巧" tabindex="-1">常见坑与实用技巧 <a class="header-anchor" href="#常见坑与实用技巧" aria-label="Permalink to &quot;常见坑与实用技巧&quot;">​</a></h2><ul><li>路径问题：用 os.path/join 兼容多平台</li><li>依赖管理：用 requirements.txt/venv</li><li>数据泄露：敏感信息不入库/代码</li><li>代码风格：PEP8，推荐用 black/flake8</li><li>日志与异常：统一处理，便于排查</li></ul><h2 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-label="Permalink to &quot;FAQ&quot;">​</a></h2><ul><li>Q: 如何快速初始化项目结构？ A: 用 cookiecutter、copier 等模板工具</li><li>Q: 如何管理多环境配置？ A: 用 .env 文件 + python-dotenv</li><li>Q: 如何写高质量文档？ A: 代码注释+README+用例说明</li></ul><h2 id="扩展阅读" tabindex="-1">扩展阅读 <a class="header-anchor" href="#扩展阅读" aria-label="Permalink to &quot;扩展阅读&quot;">​</a></h2><ul><li><a href="https://github.com/krzjoa/awesome-python-projects" target="_blank" rel="noreferrer">Awesome Python Projects</a></li><li><a href="https://cookiecutter.readthedocs.io/en/latest/" target="_blank" rel="noreferrer">cookiecutter 官方文档</a></li><li><a href="https://realpython.com/python-application-layouts/" target="_blank" rel="noreferrer">Python 项目结构最佳实践</a></li><li><a href="https://docs.pytest.org/en/stable/" target="_blank" rel="noreferrer">pytest 官方文档</a></li></ul><hr><blockquote><p>多做实战项目，注重结构、文档、测试和最佳实践，能极大提升 Python 工程能力。</p></blockquote>`,101)]))}const g=i(e,[["render",p]]);export{o as __pageData,g as default};
