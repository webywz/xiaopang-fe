import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const o=JSON.parse('{"title":"Haystack","description":"","frontmatter":{},"headers":[],"relativePath":"ai-agent/frameworks/haystack.md","filePath":"ai-agent/frameworks/haystack.md","lastUpdated":1747212070000}'),e={name:"ai-agent/frameworks/haystack.md"};function t(p,s,h,r,k,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="haystack" tabindex="-1">Haystack <a class="header-anchor" href="#haystack" aria-label="Permalink to &quot;Haystack&quot;">​</a></h1><h2 id="_1-框架简介" tabindex="-1">1. 框架简介 <a class="header-anchor" href="#_1-框架简介" aria-label="Permalink to &quot;1. 框架简介&quot;">​</a></h2><p>Haystack 是企业级检索增强生成（RAG）与 Agent 框架，专注于将大语言模型与知识库、文档库深度结合，支持复杂问答、智能搜索、企业知识管理等场景。它具备强大的文档处理、检索、生成和多 Agent 协作能力。</p><h2 id="_2-核心特性" tabindex="-1">2. 核心特性 <a class="header-anchor" href="#_2-核心特性" aria-label="Permalink to &quot;2. 核心特性&quot;">​</a></h2><ul><li>检索增强生成（RAG）全流程支持</li><li>多数据源文档处理与索引</li><li>灵活的 Pipeline 与 Agent 机制</li><li>支持多种 LLM 与向量数据库</li><li>插件化工具与自定义组件</li><li>企业级安全与权限管理</li></ul><h2 id="_3-技术原理与架构" tabindex="-1">3. 技术原理与架构 <a class="header-anchor" href="#_3-技术原理与架构" aria-label="Permalink to &quot;3. 技术原理与架构&quot;">​</a></h2><p>Haystack 采用&quot;Pipeline + Agent + Retriever + Generator&quot;架构：</p><ul><li><strong>Pipeline</strong>：可视化、可编排的任务流程，支持多模块串联</li><li><strong>Agent</strong>：具备自主决策、工具调用、上下文管理等能力</li><li><strong>Retriever</strong>：高效文档检索与向量搜索</li><li><strong>Generator</strong>：基于 LLM 的内容生成与问答</li><li><strong>Tool/Plugin</strong>：可插拔的外部功能模块</li></ul><h2 id="_4-典型应用场景" tabindex="-1">4. 典型应用场景 <a class="header-anchor" href="#_4-典型应用场景" aria-label="Permalink to &quot;4. 典型应用场景&quot;">​</a></h2><ul><li>企业知识库问答与智能搜索</li><li>检索增强生成（RAG）系统</li><li>多智能体协作与自动化办公</li><li>文档分析与报告生成</li></ul><h2 id="_5-jsdoc-代码示例" tabindex="-1">5. JSDoc 代码示例 <a class="header-anchor" href="#_5-jsdoc-代码示例" aria-label="Permalink to &quot;5. JSDoc 代码示例&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Haystack Pipeline 初始化示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Array&lt;object&gt;}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> components</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 流水线组件数组</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Pipeline 实例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> initHaystackPipeline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">components</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 假设有 Pipeline 类</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Pipeline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(components);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 检索增强生成（RAG）流程示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pipeline</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - Pipeline 实例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> query</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 用户查询</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;string&gt;}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 生成结果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> runRAG</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">pipeline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pipeline.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(query);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="_6-实践要点与扩展建议" tabindex="-1">6. 实践要点与扩展建议 <a class="header-anchor" href="#_6-实践要点与扩展建议" aria-label="Permalink to &quot;6. 实践要点与扩展建议&quot;">​</a></h2><ul><li>合理设计 Pipeline 流程，提升系统可维护性</li><li>善用 Retriever 与 Generator 组合，优化问答效果</li><li>支持多数据源与多模态文档处理</li><li>适合企业级知识管理与智能问答场景</li></ul><hr><p>Haystack 是企业级 RAG 与 Agent 系统的首选框架，适合大规模知识库、复杂问答和多智能体协作应用。</p>`,16)]))}const g=i(e,[["render",t]]);export{o as __pageData,g as default};
