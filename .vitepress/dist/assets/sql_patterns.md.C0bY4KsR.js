import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"SQL 设计模式与架构模式","description":"","frontmatter":{},"headers":[],"relativePath":"sql/patterns.md","filePath":"sql/patterns.md","lastUpdated":1747206212000}'),t={name:"sql/patterns.md"};function e(h,s,r,p,k,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="sql-设计模式与架构模式" tabindex="-1">SQL 设计模式与架构模式 <a class="header-anchor" href="#sql-设计模式与架构模式" aria-label="Permalink to &quot;SQL 设计模式与架构模式&quot;">​</a></h1><h2 id="_1-数据库范式-normalization" tabindex="-1">1. 数据库范式（Normalization） <a class="header-anchor" href="#_1-数据库范式-normalization" aria-label="Permalink to &quot;1. 数据库范式（Normalization）&quot;">​</a></h2><ul><li><strong>第一范式（1NF）</strong>：字段不可再分。</li><li><strong>第二范式（2NF）</strong>：消除部分依赖。</li><li><strong>第三范式（3NF）</strong>：消除传递依赖。</li><li><strong>BCNF</strong>：更严格的 3NF。</li><li><strong>优点</strong>：减少冗余，提升一致性。</li><li><strong>缺点</strong>：高并发下多表 JOIN 性能下降。</li></ul><h2 id="_2-反范式-denormalization" tabindex="-1">2. 反范式（Denormalization） <a class="header-anchor" href="#_2-反范式-denormalization" aria-label="Permalink to &quot;2. 反范式（Denormalization）&quot;">​</a></h2><ul><li><strong>适用场景</strong>：读多写少、对性能要求高的场景。</li><li><strong>做法</strong>：冗余部分字段，减少 JOIN。</li><li><strong>优点</strong>：查询快，结构简单。</li><li><strong>缺点</strong>：数据冗余，维护复杂。</li></ul><h2 id="_3-分表分库" tabindex="-1">3. 分表分库 <a class="header-anchor" href="#_3-分表分库" aria-label="Permalink to &quot;3. 分表分库&quot;">​</a></h2><ul><li><strong>水平分表</strong>：按主键范围、哈希等拆分大表。</li><li><strong>垂直分表</strong>：按字段拆分，冷热数据分离。</li><li><strong>分库</strong>：按业务或数据量拆分数据库。</li><li><strong>优点</strong>：提升性能，缓解单库压力。</li><li><strong>缺点</strong>：跨表/库事务复杂，开发成本高。</li></ul><h2 id="_4-读写分离" tabindex="-1">4. 读写分离 <a class="header-anchor" href="#_4-读写分离" aria-label="Permalink to &quot;4. 读写分离&quot;">​</a></h2><ul><li><strong>主从架构</strong>：主库写，从库读。</li><li><strong>适用场景</strong>：读多写少，提升读性能。</li><li><strong>注意</strong>：主从延迟、数据一致性。</li></ul><h2 id="_5-索引优化模式" tabindex="-1">5. 索引优化模式 <a class="header-anchor" href="#_5-索引优化模式" aria-label="Permalink to &quot;5. 索引优化模式&quot;">​</a></h2><ul><li><strong>单列索引、多列联合索引</strong>。</li><li><strong>覆盖索引</strong>：查询字段全部在索引中，无需回表。</li><li><strong>前缀索引</strong>：对长字符串字段优化。</li><li><strong>注意</strong>：索引过多影响写入性能。</li></ul><h2 id="_6-分区表与分区索引" tabindex="-1">6. 分区表与分区索引 <a class="header-anchor" href="#_6-分区表与分区索引" aria-label="Permalink to &quot;6. 分区表与分区索引&quot;">​</a></h2><ul><li><strong>分区表</strong>：按时间、范围、哈希等分区。</li><li><strong>优点</strong>：提升大表管理和查询效率。</li><li><strong>缺点</strong>：分区键选择需谨慎。</li></ul><h2 id="_7-物化视图" tabindex="-1">7. 物化视图 <a class="header-anchor" href="#_7-物化视图" aria-label="Permalink to &quot;7. 物化视图&quot;">​</a></h2><ul><li><strong>定义</strong>：存储查询结果的视图，定期刷新。</li><li><strong>适用场景</strong>：复杂聚合、报表。</li><li><strong>优点</strong>：查询快。</li><li><strong>缺点</strong>：数据延迟、维护成本。</li></ul><h2 id="_8-主从复制与分布式数据库" tabindex="-1">8. 主从复制与分布式数据库 <a class="header-anchor" href="#_8-主从复制与分布式数据库" aria-label="Permalink to &quot;8. 主从复制与分布式数据库&quot;">​</a></h2><ul><li><strong>主从复制</strong>：提升读性能，容灾。</li><li><strong>分布式数据库</strong>：如 TiDB、CockroachDB，支持弹性扩展。</li><li><strong>注意</strong>：分布式事务、CAP 理论权衡。</li></ul><h2 id="_9-业务场景模式" tabindex="-1">9. 业务场景模式 <a class="header-anchor" href="#_9-业务场景模式" aria-label="Permalink to &quot;9. 业务场景模式&quot;">​</a></h2><h3 id="_9-1-审计日志" tabindex="-1">9.1 审计日志 <a class="header-anchor" href="#_9-1-审计日志" aria-label="Permalink to &quot;9.1 审计日志&quot;">​</a></h3><ul><li><strong>做法</strong>：操作表 + 审计表，记录变更。</li><li><strong>代码示例</strong>：</li></ul><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 审计表设计</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> user_audit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  user_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  action</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  old_value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  new_value </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  operated_at </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DATETIME</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_9-2-软删除" tabindex="-1">9.2 软删除 <a class="header-anchor" href="#_9-2-软删除" aria-label="Permalink to &quot;9.2 软删除&quot;">​</a></h3><ul><li><strong>做法</strong>：表加 deleted 字段，删除时仅标记。</li><li><strong>优点</strong>：可恢复，便于审计。</li><li><strong>缺点</strong>：查询需加条件，索引设计需注意。</li><li><strong>代码示例</strong>：</li></ul><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ALTER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> users </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> COLUMN deleted </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TINYINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DEFAULT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 查询未删除用户</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> users </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> deleted </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_9-3-多租户设计" tabindex="-1">9.3 多租户设计 <a class="header-anchor" href="#_9-3-多租户设计" aria-label="Permalink to &quot;9.3 多租户设计&quot;">​</a></h3><ul><li><strong>做法</strong>：表加 tenant_id 字段，所有查询带租户条件。</li><li><strong>优点</strong>：数据隔离，易扩展。</li><li><strong>缺点</strong>：索引需包含 tenant_id，防止全表扫描。</li><li><strong>代码示例</strong>：</li></ul><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">SELECT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> orders </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WHERE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tenant_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ? </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">AND</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> order_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ?;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_10-查询优化与性能提升模式" tabindex="-1">10. 查询优化与性能提升模式 <a class="header-anchor" href="#_10-查询优化与性能提升模式" aria-label="Permalink to &quot;10. 查询优化与性能提升模式&quot;">​</a></h2><ul><li><strong>分页优化</strong>：大数据量分页用 keyset 分页（如 where id &gt; ? limit n）。</li><li><strong>批量操作</strong>：分批提交，防止锁表。</li><li><strong>异步写入</strong>：日志、统计等可异步。</li><li><strong>Explain 分析</strong>：定期分析慢 SQL。</li></ul><h2 id="_11-jsdoc-代码示例" tabindex="-1">11. JSDoc 代码示例 <a class="header-anchor" href="#_11-jsdoc-代码示例" aria-label="Permalink to &quot;11. JSDoc 代码示例&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 软删除用户</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {import(&#39;mysql&#39;).Connection}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conn</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> userId</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;void&gt;}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> softDeleteUser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">conn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">userId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;UPDATE users SET deleted = 1 WHERE id = ?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [userId]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 多租户安全查询</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {import(&#39;mysql&#39;).Connection}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conn</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tenantId</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> orderId</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;Object|null&gt;}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getOrderByTenant</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">conn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">tenantId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">orderId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM orders WHERE tenant_id = ? AND order_id = ?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [tenantId, orderId]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><hr><blockquote><p>设计模式的选择需结合业务需求、数据规模和团队能力，建议优先选用主流、社区验证的模式。</p></blockquote>`,33)]))}const E=i(t,[["render",e]]);export{g as __pageData,E as default};
