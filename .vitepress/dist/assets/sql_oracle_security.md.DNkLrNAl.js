import{_ as a,c as i,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const o=JSON.parse('{"title":"Oracle 数据库安全","description":"","frontmatter":{},"headers":[],"relativePath":"sql/oracle/security.md","filePath":"sql/oracle/security.md","lastUpdated":1747206212000}'),e={name:"sql/oracle/security.md"};function t(h,s,r,p,k,d){return n(),i("div",null,s[0]||(s[0]=[l(`<h1 id="oracle-数据库安全" tabindex="-1">Oracle 数据库安全 <a class="header-anchor" href="#oracle-数据库安全" aria-label="Permalink to &quot;Oracle 数据库安全&quot;">​</a></h1><h2 id="_1-账户与权限管理" tabindex="-1">1. 账户与权限管理 <a class="header-anchor" href="#_1-账户与权限管理" aria-label="Permalink to &quot;1. 账户与权限管理&quot;">​</a></h2><ul><li>严格区分 DBA、开发、只读等角色，最小权限原则</li><li>生产环境禁用默认账户，定期修改密码</li><li>授权用 GRANT，收回用 REVOKE</li></ul><h2 id="_2-数据加密与脱敏" tabindex="-1">2. 数据加密与脱敏 <a class="header-anchor" href="#_2-数据加密与脱敏" aria-label="Permalink to &quot;2. 数据加密与脱敏&quot;">​</a></h2><ul><li>支持表空间加密（TDE）、列级加密、应用层加密</li><li>敏感字段（如手机号、身份证）建议加密或脱敏存储</li></ul><h2 id="_3-审计与日志" tabindex="-1">3. 审计与日志 <a class="header-anchor" href="#_3-审计与日志" aria-label="Permalink to &quot;3. 审计与日志&quot;">​</a></h2><ul><li>启用审计（AUDIT），记录关键操作</li><li>定期分析审计日志，发现异常访问</li></ul><h2 id="_4-防-sql-注入与安全开发" tabindex="-1">4. 防 SQL 注入与安全开发 <a class="header-anchor" href="#_4-防-sql-注入与安全开发" aria-label="Permalink to &quot;4. 防 SQL 注入与安全开发&quot;">​</a></h2><ul><li>所有输入参数必须参数化，严禁拼接 SQL</li><li>定期安全审计，限制数据库账户权限</li></ul><h2 id="_5-备份文件安全" tabindex="-1">5. 备份文件安全 <a class="header-anchor" href="#_5-备份文件安全" aria-label="Permalink to &quot;5. 备份文件安全&quot;">​</a></h2><ul><li>备份文件加密存储，限制访问权限</li><li>备份文件定期归档、异地存储</li></ul><h2 id="_6-常见安全风险与最佳实践" tabindex="-1">6. 常见安全风险与最佳实践 <a class="header-anchor" href="#_6-常见安全风险与最佳实践" aria-label="Permalink to &quot;6. 常见安全风险与最佳实践&quot;">​</a></h2><ul><li>禁用高危功能（如 UTL_FILE、外部表）</li><li>生产环境禁用 PUBLIC 权限</li><li>定期安全加固与漏洞修复</li></ul><h2 id="_7-node-js-代码示例-含-jsdoc-注释" tabindex="-1">7. Node.js 代码示例（含 JSDoc 注释） <a class="header-anchor" href="#_7-node-js-代码示例-含-jsdoc-注释" aria-label="Permalink to &quot;7. Node.js 代码示例（含 JSDoc 注释）&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 参数化查询防止 SQL 注入</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {oracledb.Connection}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conn</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> username</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;object|null&gt;}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getUserByName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">conn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM users WHERE username = :username&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { username });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result.rows[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><hr><p>Oracle 安全体系完善，建议结合业务场景持续加固，定期审计与演练。</p>`,17)]))}const u=a(e,[["render",t]]);export{o as __pageData,u as default};
