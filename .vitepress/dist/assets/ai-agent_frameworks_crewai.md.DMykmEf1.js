import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"CrewAI","description":"","frontmatter":{},"headers":[],"relativePath":"ai-agent/frameworks/crewai.md","filePath":"ai-agent/frameworks/crewai.md","lastUpdated":1747212070000}'),e={name:"ai-agent/frameworks/crewai.md"};function t(p,s,r,h,k,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="crewai" tabindex="-1">CrewAI <a class="header-anchor" href="#crewai" aria-label="Permalink to &quot;CrewAI&quot;">​</a></h1><h2 id="_1-框架简介" tabindex="-1">1. 框架简介 <a class="header-anchor" href="#_1-框架简介" aria-label="Permalink to &quot;1. 框架简介&quot;">​</a></h2><p>CrewAI 是专注于多智能体团队协作与角色分工的开源框架，适用于需要多角色协作、任务分解和团队型智能体的场景。它强调智能体之间的分工、协作与通信，适合自动编程、项目管理、复杂流程自动化等应用。</p><h2 id="_2-核心特性" tabindex="-1">2. 核心特性 <a class="header-anchor" href="#_2-核心特性" aria-label="Permalink to &quot;2. 核心特性&quot;">​</a></h2><ul><li>多角色智能体团队（Crew）建模</li><li>任务分解与角色分配</li><li>智能体间通信与协作</li><li>支持异构智能体与能力扩展</li><li>任务进度追踪与结果聚合</li><li>易于集成外部工具与插件</li></ul><h2 id="_3-技术原理与架构" tabindex="-1">3. 技术原理与架构 <a class="header-anchor" href="#_3-技术原理与架构" aria-label="Permalink to &quot;3. 技术原理与架构&quot;">​</a></h2><p>CrewAI 采用&quot;团队（Crew）+ 角色（Role）+ 智能体（Agent）&quot;的分层架构：</p><ul><li><strong>Crew</strong>：由多个角色和智能体组成的协作团队</li><li><strong>Role</strong>：定义每个智能体的职责与能力</li><li><strong>Agent</strong>：具体执行任务的智能体实例</li><li><strong>Task Manager</strong>：负责任务分解、分配与进度管理</li><li><strong>Communication Channel</strong>：支持团队成员间的信息同步与协作</li></ul><h2 id="_4-典型应用场景" tabindex="-1">4. 典型应用场景 <a class="header-anchor" href="#_4-典型应用场景" aria-label="Permalink to &quot;4. 典型应用场景&quot;">​</a></h2><ul><li>多智能体协作编程与代码审查</li><li>项目管理与自动化办公</li><li>复杂流程自动化与分工</li><li>智能团队助手与知识管理</li></ul><h2 id="_5-jsdoc-代码示例" tabindex="-1">5. JSDoc 代码示例 <a class="header-anchor" href="#_5-jsdoc-代码示例" aria-label="Permalink to &quot;5. JSDoc 代码示例&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * CrewAI 团队初始化示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Array&lt;object&gt;}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> roles</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 角色配置数组</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Array&lt;object&gt;}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agents</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 智能体实例数组</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Crew 实例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> initCrew</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">roles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">agents</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 假设有 Crew 类</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Crew</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(roles, agents);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 多角色任务分配与协作示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crew</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - Crew 实例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 复杂任务描述</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;string&gt;}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 协作结果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> runCrewTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">crew</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> crew.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(task);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="_6-实践要点与扩展建议" tabindex="-1">6. 实践要点与扩展建议 <a class="header-anchor" href="#_6-实践要点与扩展建议" aria-label="Permalink to &quot;6. 实践要点与扩展建议&quot;">​</a></h2><ul><li>合理设计角色与分工，提升团队协作效率</li><li>支持异构智能体与能力扩展，适应多样化任务</li><li>善用任务分解与进度追踪，保障流程可控</li><li>适合自动编程、项目管理等多角色协作场景</li></ul><hr><p>CrewAI 是多智能体团队协作与分工的优秀框架，适合复杂项目和团队型智能体系统的快速开发与落地。</p>`,16)]))}const o=i(e,[["render",t]]);export{g as __pageData,o as default};
