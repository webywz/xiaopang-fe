import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"关键渲染路径与性能优化","description":"深入解析浏览器关键渲染路径、各阶段性能瓶颈与优化策略，助你提升Web页面首屏速度。","frontmatter":{"layout":"doc","title":"关键渲染路径与性能优化","description":"深入解析浏览器关键渲染路径、各阶段性能瓶颈与优化策略，助你提升Web页面首屏速度。"},"headers":[],"relativePath":"blog/critical-rendering-path.md","filePath":"blog/critical-rendering-path.md","lastUpdated":1746781833000}'),e={name:"blog/critical-rendering-path.md"};function t(h,s,p,r,k,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="关键渲染路径与性能优化" tabindex="-1">关键渲染路径与性能优化 <a class="header-anchor" href="#关键渲染路径与性能优化" aria-label="Permalink to &quot;关键渲染路径与性能优化&quot;">​</a></h1><p>关键渲染路径（Critical Rendering Path, CRP）决定了页面首屏渲染速度。本文将系统讲解CRP的各阶段、性能瓶颈与优化策略。</p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li><a href="#关键渲染路径概述">关键渲染路径概述</a></li><li><a href="#各阶段性能瓶颈">各阶段性能瓶颈</a></li><li><a href="#优化策略与实战">优化策略与实战</a></li><li><a href="#性能监测与工具">性能监测与工具</a></li></ul><h2 id="关键渲染路径概述" tabindex="-1">关键渲染路径概述 <a class="header-anchor" href="#关键渲染路径概述" aria-label="Permalink to &quot;关键渲染路径概述&quot;">​</a></h2><p>关键渲染路径包括：</p><ol><li>HTML解析生成DOM树</li><li>CSS解析生成CSSOM树</li><li>合成渲染树（Render Tree）</li><li>布局（Layout/Reflow）</li><li>绘制（Paint/Repaint）</li><li>分层与合成（Compositing）</li></ol><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 关键渲染路径主要阶段</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string[]}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getCRPStages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;DOM树生成&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CSSOM树生成&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;渲染树合成&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;布局&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;绘制&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;分层与合成&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="各阶段性能瓶颈" tabindex="-1">各阶段性能瓶颈 <a class="header-anchor" href="#各阶段性能瓶颈" aria-label="Permalink to &quot;各阶段性能瓶颈&quot;">​</a></h2><ul><li><strong>DOM/CSSOM生成</strong>：大文件、阻塞资源、复杂选择器</li><li><strong>布局（Reflow）</strong>：频繁DOM操作、样式变更</li><li><strong>绘制（Repaint）</strong>：大面积阴影、渐变、图片等</li><li><strong>合成</strong>：过多分层、动画过度</li></ul><h2 id="优化策略与实战" tabindex="-1">优化策略与实战 <a class="header-anchor" href="#优化策略与实战" aria-label="Permalink to &quot;优化策略与实战&quot;">​</a></h2><ul><li>内联关键CSS，异步加载非关键CSS</li><li>批量DOM操作，减少重排重绘</li><li>优先使用transform、opacity实现动画</li><li>图片懒加载、字体异步加载</li><li>利用HTTP/2多路复用、CDN加速</li></ul><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 批量更新样式，减少重排</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {HTMLElement}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> el</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 目标元素</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> styles</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 样式对象</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> batchUpdateStyles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">el</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">styles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Object.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(el.style, styles);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="性能监测与工具" tabindex="-1">性能监测与工具 <a class="header-anchor" href="#性能监测与工具" aria-label="Permalink to &quot;性能监测与工具&quot;">​</a></h2><ul><li>Chrome DevTools &gt; Performance、Coverage</li><li>Lighthouse、WebPageTest</li><li>使用Performance API自定义埋点</li></ul><hr><blockquote><p>参考资料：<a href="https://developer.mozilla.org/zh-CN/docs/Web/Performance/Critical_rendering_path" target="_blank" rel="noreferrer">MDN 关键渲染路径</a></p></blockquote>`,17)]))}const g=i(e,[["render",t]]);export{c as __pageData,g as default};
