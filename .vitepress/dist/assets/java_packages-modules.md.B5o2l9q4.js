import{_ as a,c as i,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const o=JSON.parse('{"title":"Java 包与模块详解","description":"","frontmatter":{},"headers":[],"relativePath":"java/packages-modules.md","filePath":"java/packages-modules.md","lastUpdated":1747111449000}'),e={name:"java/packages-modules.md"};function p(h,s,t,r,k,d){return n(),i("div",null,s[0]||(s[0]=[l(`<h1 id="java-包与模块详解" tabindex="-1">Java 包与模块详解 <a class="header-anchor" href="#java-包与模块详解" aria-label="Permalink to &quot;Java 包与模块详解&quot;">​</a></h1><h2 id="_1-包-package-基础" tabindex="-1">1. 包（Package）基础 <a class="header-anchor" href="#_1-包-package-基础" aria-label="Permalink to &quot;1. 包（Package）基础&quot;">​</a></h2><p>包（package）是 Java 用于组织类、接口的机制，类似于文件夹。合理使用包有助于代码分层、避免命名冲突、提升可维护性。</p><h3 id="_1-1-包的声明与使用" tabindex="-1">1.1 包的声明与使用 <a class="header-anchor" href="#_1-1-包的声明与使用" aria-label="Permalink to &quot;1.1 包的声明与使用&quot;">​</a></h3><ul><li>包声明必须是 Java 文件的第一条非注释语句。</li><li>包名建议全小写，通常采用公司域名倒序加项目名。</li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 包声明示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.xiaopang.demo;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HelloWorld</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sayHello</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, world!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h3 id="_1-2-导入其他包的类" tabindex="-1">1.2 导入其他包的类 <a class="header-anchor" href="#_1-2-导入其他包的类" aria-label="Permalink to &quot;1.2 导入其他包的类&quot;">​</a></h3><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.util.List;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.xiaopang.demo.HelloWorld;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; list </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ArrayList&lt;&gt;();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HelloWorld hw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HelloWorld</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_1-3-包的访问控制" tabindex="-1">1.3 包的访问控制 <a class="header-anchor" href="#_1-3-包的访问控制" aria-label="Permalink to &quot;1.3 包的访问控制&quot;">​</a></h3><ul><li><code>public</code>：包外可见</li><li>默认（无修饰符）：仅包内可见</li></ul><hr><h2 id="_2-模块-module-基础-java-9" tabindex="-1">2. 模块（Module）基础（Java 9+） <a class="header-anchor" href="#_2-模块-module-基础-java-9" aria-label="Permalink to &quot;2. 模块（Module）基础（Java 9+）&quot;">​</a></h2><p>模块是 Java 9 引入的新特性，用于更大粒度地组织包和类，提升项目的可维护性和安全性。</p><h3 id="_2-1-module-info-java" tabindex="-1">2.1 module-info.java <a class="header-anchor" href="#_2-1-module-info-java" aria-label="Permalink to &quot;2.1 module-info.java&quot;">​</a></h3><p>每个模块根目录下可有一个 <code>module-info.java</code> 文件，声明模块名、依赖和导出包。</p><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * module-info.java 示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">module</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> com</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.xiaopang.demo {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.xiaopang.demo.api; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 导出包</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.sql;            </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 依赖其他模块</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_2-2-模块的依赖与导出" tabindex="-1">2.2 模块的依赖与导出 <a class="header-anchor" href="#_2-2-模块的依赖与导出" aria-label="Permalink to &quot;2.2 模块的依赖与导出&quot;">​</a></h3><ul><li><code>exports</code>：声明哪些包可被外部访问</li><li><code>requires</code>：声明依赖的其他模块</li></ul><hr><h2 id="_3-实践案例" tabindex="-1">3. 实践案例 <a class="header-anchor" href="#_3-实践案例" aria-label="Permalink to &quot;3. 实践案例&quot;">​</a></h2><h3 id="_3-1-多包项目结构示例" tabindex="-1">3.1 多包项目结构示例 <a class="header-anchor" href="#_3-1-多包项目结构示例" aria-label="Permalink to &quot;3.1 多包项目结构示例&quot;">​</a></h3><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>com/</span></span>
<span class="line"><span> └── xiaopang/</span></span>
<span class="line"><span>      ├── demo/</span></span>
<span class="line"><span>      │    └── HelloWorld.java</span></span>
<span class="line"><span>      └── util/</span></span>
<span class="line"><span>           └── StringUtils.java</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_3-2-跨包访问" tabindex="-1">3.2 跨包访问 <a class="header-anchor" href="#_3-2-跨包访问" aria-label="Permalink to &quot;3.2 跨包访问&quot;">​</a></h3><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// com/xiaopang/util/StringUtils.java</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.xiaopang.util;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 字符串工具类</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> StringUtils</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 判断字符串是否为空</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> str</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 待判断字符串</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 是否为空</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">str</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> str </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> str.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// com/xiaopang/demo/HelloWorld.java</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.xiaopang.demo;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.xiaopang.util.StringUtils;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HelloWorld</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(StringUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><hr><h2 id="_4-常见易错点" tabindex="-1">4. 常见易错点 <a class="header-anchor" href="#_4-常见易错点" aria-label="Permalink to &quot;4. 常见易错点&quot;">​</a></h2><ul><li>包声明与文件夹结构不一致会导致编译错误。</li><li>同一包下不能有同名类。</li><li>模块未正确导出包或声明依赖会导致访问失败。</li><li>默认访问权限（无修饰符）仅包内可见，跨包访问需用 <code>public</code>。</li></ul><hr><h2 id="_5-进阶拓展" tabindex="-1">5. 进阶拓展 <a class="header-anchor" href="#_5-进阶拓展" aria-label="Permalink to &quot;5. 进阶拓展&quot;">​</a></h2><ul><li>模块间的循环依赖问题</li><li>使用 <code>opens</code> 关键字支持反射访问</li><li>自动模块与未命名模块兼容性</li><li>多模块项目的构建与管理（Maven/Gradle）</li></ul><hr><h2 id="_6-参考资料" tabindex="-1">6. 参考资料 <a class="header-anchor" href="#_6-参考资料" aria-label="Permalink to &quot;6. 参考资料&quot;">​</a></h2><ul><li><a href="https://docs.oracle.com/javase/specs/jls/se17/html/jls-7.html" target="_blank" rel="noreferrer">Java 官方包与模块文档</a></li><li><a href="https://openjdk.org/projects/jigsaw/quick-start" target="_blank" rel="noreferrer">Java 9 模块系统官方教程</a></li><li>《Effective Java》第三版</li></ul><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li><a href="#包的概念与作用">包的概念与作用</a></li><li><a href="#包的定义与使用">包的定义与使用</a></li><li><a href="#包的命名规范">包的命名规范</a></li><li><a href="#包的访问控制">包的访问控制</a></li><li><a href="#模块系统简介java-9">模块系统简介（Java 9+）</a></li><li><a href="#module-infojava-文件">module-info.java 文件</a></li><li><a href="#常见问题-faq">常见问题 FAQ</a></li></ul><hr><h2 id="包的概念与作用" tabindex="-1">包的概念与作用 <a class="header-anchor" href="#包的概念与作用" aria-label="Permalink to &quot;包的概念与作用&quot;">​</a></h2><ul><li>用于组织类和接口，避免命名冲突。</li><li>提高代码的可维护性和可读性。</li></ul><hr><h2 id="包的定义与使用" tabindex="-1">包的定义与使用 <a class="header-anchor" href="#包的定义与使用" aria-label="Permalink to &quot;包的定义与使用&quot;">​</a></h2><ul><li>使用 <code>package</code> 关键字声明包。</li><li>包名建议与文件夹结构一致。</li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.xiaopang.demo;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Hello</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello from package!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>导入其它包的类：</li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.util.List;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.xiaopang.demo.Hello;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><h2 id="包的命名规范" tabindex="-1">包的命名规范 <a class="header-anchor" href="#包的命名规范" aria-label="Permalink to &quot;包的命名规范&quot;">​</a></h2><ul><li>一般采用公司域名倒写加项目名，如 <code>com.example.project</code>。</li><li>包名全部小写，多个单词用点分隔。</li></ul><table tabindex="0"><thead><tr><th>示例包名</th><th>说明</th></tr></thead><tbody><tr><td>com.xiaopang.blog</td><td>推荐</td></tr><tr><td>org.apache.commons</td><td>推荐</td></tr><tr><td>com.example.myapp.util</td><td>推荐</td></tr></tbody></table><hr><h2 id="包的访问控制" tabindex="-1">包的访问控制 <a class="header-anchor" href="#包的访问控制" aria-label="Permalink to &quot;包的访问控制&quot;">​</a></h2><ul><li><code>public</code>：对所有类可见</li><li><code>protected</code>：同包或子类可见</li><li>默认（无修饰符）：同包可见</li><li><code>private</code>：仅类内部可见</li></ul><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.xiaopang.demo;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> A</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 默认，同包可见</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> y </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 所有可见</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> z </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 仅类内可见</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><hr><h2 id="模块系统简介-java-9" tabindex="-1">模块系统简介（Java 9+） <a class="header-anchor" href="#模块系统简介-java-9" aria-label="Permalink to &quot;模块系统简介（Java 9+）&quot;">​</a></h2><ul><li>Java 9 引入模块系统（JPMS），用于更大粒度的代码组织。</li><li>每个模块有自己的 <code>module-info.java</code> 文件。</li><li>模块可导出包、声明依赖。</li></ul><hr><h2 id="module-info-java-文件" tabindex="-1">module-info.java 文件 <a class="header-anchor" href="#module-info-java-文件" aria-label="Permalink to &quot;module-info.java 文件&quot;">​</a></h2><div class="language-java vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">module</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> com</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.xiaopang.demo {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    exports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> com.xiaopang.demo.api;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java.sql;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><code>exports</code>：导出包</li><li><code>requires</code>：声明依赖模块</li></ul><hr><h2 id="常见问题-faq" tabindex="-1">常见问题 FAQ <a class="header-anchor" href="#常见问题-faq" aria-label="Permalink to &quot;常见问题 FAQ&quot;">​</a></h2><h3 id="q1-包名和文件夹结构必须一致吗" tabindex="-1">Q1: 包名和文件夹结构必须一致吗？ <a class="header-anchor" href="#q1-包名和文件夹结构必须一致吗" aria-label="Permalink to &quot;Q1: 包名和文件夹结构必须一致吗？&quot;">​</a></h3><p>A: 必须一致，否则编译器无法正确识别。</p><h3 id="q2-一个文件可以有多个包声明吗" tabindex="-1">Q2: 一个文件可以有多个包声明吗？ <a class="header-anchor" href="#q2-一个文件可以有多个包声明吗" aria-label="Permalink to &quot;Q2: 一个文件可以有多个包声明吗？&quot;">​</a></h3><p>A: 不可以，每个 Java 文件只能有一个 package 声明。</p><h3 id="q3-模块和包的区别" tabindex="-1">Q3: 模块和包的区别？ <a class="header-anchor" href="#q3-模块和包的区别" aria-label="Permalink to &quot;Q3: 模块和包的区别？&quot;">​</a></h3><p>A: 包是类的集合，模块是包的集合，模块有更强的封装和依赖管理能力。</p><hr><blockquote><p>本文档持续完善，欢迎补充更多包与模块相关案例。</p></blockquote>`,69)]))}const u=a(e,[["render",p]]);export{o as __pageData,u as default};
