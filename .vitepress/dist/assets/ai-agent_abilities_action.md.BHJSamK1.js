import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"行动与执行","description":"","frontmatter":{},"headers":[],"relativePath":"ai-agent/abilities/action.md","filePath":"ai-agent/abilities/action.md","lastUpdated":1747212070000}'),p={name:"ai-agent/abilities/action.md"};function t(h,s,e,k,r,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="行动与执行" tabindex="-1">行动与执行 <a class="header-anchor" href="#行动与执行" aria-label="Permalink to &quot;行动与执行&quot;">​</a></h1><h2 id="_1-能力简介" tabindex="-1">1. 能力简介 <a class="header-anchor" href="#_1-能力简介" aria-label="Permalink to &quot;1. 能力简介&quot;">​</a></h2><p>行动与执行（Action &amp; Execution）是 AI Agent 将规划结果转化为实际操作的关键能力。通过 API 调用、自动化脚本、RPA 等方式，智能体能够自动完成任务、操作系统、调用外部服务，实现端到端自动化。</p><h2 id="_2-主要原理与关键技术" tabindex="-1">2. 主要原理与关键技术 <a class="header-anchor" href="#_2-主要原理与关键技术" aria-label="Permalink to &quot;2. 主要原理与关键技术&quot;">​</a></h2><ul><li><strong>API 调用</strong>：通过标准接口与外部系统、服务集成</li><li><strong>自动化脚本</strong>：自动执行本地或远程脚本（如 Python、Shell）</li><li><strong>RPA（流程自动化）</strong>：模拟人工操作，实现跨系统自动化</li><li><strong>任务调度与并发执行</strong>：支持多任务并行与优先级管理</li><li><strong>异常检测与回滚机制</strong>：保障执行安全与稳定</li></ul><h2 id="_3-jsdoc-代码示例" tabindex="-1">3. JSDoc 代码示例 <a class="header-anchor" href="#_3-jsdoc-代码示例" aria-label="Permalink to &quot;3. JSDoc 代码示例&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * API 调用执行示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> apiName</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - API 名称</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> params</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 调用参数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> executor</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 执行器接口</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;any&gt;}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> API 调用结果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> executeApi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">apiName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">executor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> executor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">callApi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(apiName, params);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 自动化脚本执行示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scriptPath</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 脚本文件路径</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> executor</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 执行器接口</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;string&gt;}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 执行结果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> runScript</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">scriptPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">executor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> executor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">runScript</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scriptPath);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="_4-实践要点与扩展建议" tabindex="-1">4. 实践要点与扩展建议 <a class="header-anchor" href="#_4-实践要点与扩展建议" aria-label="Permalink to &quot;4. 实践要点与扩展建议&quot;">​</a></h2><ul><li>规范 API 接口与参数校验，提升兼容性</li><li>支持多种自动化方式（API、脚本、RPA）灵活切换</li><li>加强异常处理与日志记录，便于追踪与回溯</li><li>可集成权限管理与安全控制，保障系统安全</li></ul><hr><p>行动与执行能力是 AI Agent 实现自动化落地的核心环节，直接决定任务完成的效率与可靠性。</p>`,11)]))}const o=i(p,[["render",t]]);export{g as __pageData,o as default};
