import{_ as a,c as i,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"AutoGen","description":"","frontmatter":{},"headers":[],"relativePath":"ai-agent/frameworks/autogen.md","filePath":"ai-agent/frameworks/autogen.md","lastUpdated":1747212070000}'),e={name:"ai-agent/frameworks/autogen.md"};function t(p,s,h,k,r,d){return n(),i("div",null,s[0]||(s[0]=[l(`<h1 id="autogen" tabindex="-1">AutoGen <a class="header-anchor" href="#autogen" aria-label="Permalink to &quot;AutoGen&quot;">​</a></h1><h2 id="_1-框架简介" tabindex="-1">1. 框架简介 <a class="header-anchor" href="#_1-框架简介" aria-label="Permalink to &quot;1. 框架简介&quot;">​</a></h2><p>AutoGen 是微软开源的多智能体自动协作与任务分解框架，专为复杂任务的自动化分工、团队智能体协作和端到端流程优化设计。它支持多角色 Agent、自动任务分解、消息通信和结果聚合，适合科研、自动编程等高复杂度场景。</p><h2 id="_2-核心特性" tabindex="-1">2. 核心特性 <a class="header-anchor" href="#_2-核心特性" aria-label="Permalink to &quot;2. 核心特性&quot;">​</a></h2><ul><li>多智能体协作与分工（支持多角色、异构 Agent）</li><li>自动任务分解与分配</li><li>智能体间消息通信与同步</li><li>结果聚合与冲突解决</li><li>支持插件与外部工具集成</li><li>易于扩展与自定义</li></ul><h2 id="_3-技术原理与架构" tabindex="-1">3. 技术原理与架构 <a class="header-anchor" href="#_3-技术原理与架构" aria-label="Permalink to &quot;3. 技术原理与架构&quot;">​</a></h2><p>AutoGen 采用&quot;多 Agent + 任务分解 + 通信协议&quot;架构：</p><ul><li><strong>Agent</strong>：可配置多种角色与能力，支持异构协作</li><li><strong>Task Decomposer</strong>：自动将复杂任务拆解为子任务</li><li><strong>Message Channel</strong>：智能体间异步通信与信息同步</li><li><strong>Result Aggregator</strong>：汇总各子任务结果，形成最终输出</li></ul><h2 id="_4-典型应用场景" tabindex="-1">4. 典型应用场景 <a class="header-anchor" href="#_4-典型应用场景" aria-label="Permalink to &quot;4. 典型应用场景&quot;">​</a></h2><ul><li>自动化科研与论文写作</li><li>多智能体协作编程与代码审查</li><li>复杂项目管理与流程自动化</li><li>智能团队助手与知识管理</li></ul><h2 id="_5-jsdoc-代码示例" tabindex="-1">5. JSDoc 代码示例 <a class="header-anchor" href="#_5-jsdoc-代码示例" aria-label="Permalink to &quot;5. JSDoc 代码示例&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * AutoGen 多智能体协作初始化示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Array&lt;object&gt;}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agentConfigs</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 智能体配置数组</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> taskDecomposer</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 任务分解器</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 协作系统实例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> initAutoGenSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">agentConfigs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">taskDecomposer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 假设有 AutoGenSystem 类</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AutoGenSystem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(agentConfigs, taskDecomposer);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 多智能体任务协作示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> system</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 协作系统实例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 复杂任务描述</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;string&gt;}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 协作结果</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> runMultiAgentTask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">system</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> system.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(task);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="_6-实践要点与扩展建议" tabindex="-1">6. 实践要点与扩展建议 <a class="header-anchor" href="#_6-实践要点与扩展建议" aria-label="Permalink to &quot;6. 实践要点与扩展建议&quot;">​</a></h2><ul><li>合理配置 Agent 角色与能力，提升团队协作效率</li><li>善用自动任务分解与结果聚合，优化复杂流程</li><li>支持插件与外部工具扩展，增强系统适应性</li><li>适合科研、自动编程等高复杂度、多角色场景</li></ul><hr><p>AutoGen 是多智能体协作与自动化任务分解的强大框架，适合团队型智能体系统的快速开发与落地。</p>`,16)]))}const c=a(e,[["render",t]]);export{g as __pageData,c as default};
