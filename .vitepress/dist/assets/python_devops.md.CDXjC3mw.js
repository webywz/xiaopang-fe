import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"测试与运维","description":"","frontmatter":{"title":"测试与运维"},"headers":[],"relativePath":"python/devops.md","filePath":"python/devops.md","lastUpdated":1747141731000}'),e={name:"python/devops.md"};function t(p,s,h,r,k,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="python-devops-与运维详解" tabindex="-1">Python DevOps 与运维详解 <a class="header-anchor" href="#python-devops-与运维详解" aria-label="Permalink to &quot;Python DevOps 与运维详解&quot;">​</a></h1><h2 id="_1-1-主题简介" tabindex="-1">1.1 主题简介 <a class="header-anchor" href="#_1-1-主题简介" aria-label="Permalink to &quot;1.1 主题简介&quot;">​</a></h2><p>Python 在 DevOps 和自动化运维领域应用广泛，支持自动化脚本、远程管理、CI/CD、监控、容器编排等。</p><hr><h2 id="_1-2-devops-基础" tabindex="-1">1.2 DevOps 基础 <a class="header-anchor" href="#_1-2-devops-基础" aria-label="Permalink to &quot;1.2 DevOps 基础&quot;">​</a></h2><ul><li>DevOps 是开发（Development）与运维（Operations）的结合，强调自动化、持续集成、持续交付、协作与监控。</li><li>目标：提升交付效率、降低故障率、加快响应速度。</li></ul><hr><h2 id="_1-3-自动化运维常用库" tabindex="-1">1.3 自动化运维常用库 <a class="header-anchor" href="#_1-3-自动化运维常用库" aria-label="Permalink to &quot;1.3 自动化运维常用库&quot;">​</a></h2><h3 id="_1-3-1-os、subprocess-——-系统与进程管理" tabindex="-1">1.3.1 os、subprocess —— 系统与进程管理 <a class="header-anchor" href="#_1-3-1-os、subprocess-——-系统与进程管理" aria-label="Permalink to &quot;1.3.1 os、subprocess —— 系统与进程管理&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os, subprocess</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.system(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ls&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">subprocess.run([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ls&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;-l&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_1-3-2-paramiko-——-ssh-远程运维" tabindex="-1">1.3.2 paramiko —— SSH 远程运维 <a class="header-anchor" href="#_1-3-2-paramiko-——-ssh-远程运维" aria-label="Permalink to &quot;1.3.2 paramiko —— SSH 远程运维&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> paramiko</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ssh </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> paramiko.SSHClient()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ssh.connect(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;host&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">password</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pwd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">stdin, stdout, stderr </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ssh.exec_command(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ls&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(stdout.read().decode())</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_1-3-3-fabric-——-批量远程运维" tabindex="-1">1.3.3 fabric —— 批量远程运维 <a class="header-anchor" href="#_1-3-3-fabric-——-批量远程运维" aria-label="Permalink to &quot;1.3.3 fabric —— 批量远程运维&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fabric </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Connection</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Connection(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;host&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c.run(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ls&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="_1-3-4-psutil-——-系统监控" tabindex="-1">1.3.4 psutil —— 系统监控 <a class="header-anchor" href="#_1-3-4-psutil-——-系统监控" aria-label="Permalink to &quot;1.3.4 psutil —— 系统监控&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> psutil</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(psutil.cpu_percent(), psutil.virtual_memory())</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-3-5-docker-py-——-容器管理" tabindex="-1">1.3.5 docker-py —— 容器管理 <a class="header-anchor" href="#_1-3-5-docker-py-——-容器管理" aria-label="Permalink to &quot;1.3.5 docker-py —— 容器管理&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> docker</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> docker.from_env()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> client.containers.list():</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(c.name)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_1-3-6-requests-——-接口自动化" tabindex="-1">1.3.6 requests —— 接口自动化 <a class="header-anchor" href="#_1-3-6-requests-——-接口自动化" aria-label="Permalink to &quot;1.3.6 requests —— 接口自动化&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> requests.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://api.github.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(r.json())</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><hr><h2 id="_1-4-ci-cd-持续集成与交付" tabindex="-1">1.4 CI/CD 持续集成与交付 <a class="header-anchor" href="#_1-4-ci-cd-持续集成与交付" aria-label="Permalink to &quot;1.4 CI/CD 持续集成与交付&quot;">​</a></h2><ul><li>Jenkins：主流开源 CI 工具，支持流水线、插件丰富。</li><li>GitHub Actions：云原生 CI/CD，支持自动化测试、部署。</li><li>Python 可用于编写自定义构建、测试、部署脚本。</li></ul><hr><h2 id="_1-5-配置管理与自动化" tabindex="-1">1.5 配置管理与自动化 <a class="header-anchor" href="#_1-5-配置管理与自动化" aria-label="Permalink to &quot;1.5 配置管理与自动化&quot;">​</a></h2><ul><li>Ansible：基于 SSH 的自动化运维工具，支持批量配置、部署。</li><li>SaltStack：支持大规模集群管理。</li><li>Python 可自定义模块、扩展自动化能力。</li></ul><hr><h2 id="_1-6-日志与监控" tabindex="-1">1.6 日志与监控 <a class="header-anchor" href="#_1-6-日志与监控" aria-label="Permalink to &quot;1.6 日志与监控&quot;">​</a></h2><ul><li>日志采集：logging、ELK（Elasticsearch、Logstash、Kibana）。</li><li>监控告警：psutil、Prometheus、Grafana、Zabbix。</li><li>Python 可实现自定义监控脚本、自动告警。</li></ul><hr><h2 id="_1-7-自动化测试" tabindex="-1">1.7 自动化测试 <a class="header-anchor" href="#_1-7-自动化测试" aria-label="Permalink to &quot;1.7 自动化测试&quot;">​</a></h2><ul><li>pytest、unittest：单元测试、集成测试。</li><li>requests/selenium：接口与端到端自动化测试。</li></ul><hr><h2 id="_1-8-容器与云原生" tabindex="-1">1.8 容器与云原生 <a class="header-anchor" href="#_1-8-容器与云原生" aria-label="Permalink to &quot;1.8 容器与云原生&quot;">​</a></h2><ul><li>docker-py：管理 Docker 容器。</li><li>kubernetes-client：K8s 集群自动化。</li><li>云平台 API：AWS boto3、Aliyun SDK。</li></ul><hr><h2 id="_1-9-典型案例" tabindex="-1">1.9 典型案例 <a class="header-anchor" href="#_1-9-典型案例" aria-label="Permalink to &quot;1.9 典型案例&quot;">​</a></h2><h3 id="_1-9-1-自动化部署脚本" tabindex="-1">1.9.1 自动化部署脚本 <a class="header-anchor" href="#_1-9-1-自动化部署脚本" aria-label="Permalink to &quot;1.9.1 自动化部署脚本&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> os</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">os.system(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;git pull &amp;&amp; systemctl restart myapp&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="_1-9-2-远程批量执行命令" tabindex="-1">1.9.2 远程批量执行命令 <a class="header-anchor" href="#_1-9-2-远程批量执行命令" aria-label="Permalink to &quot;1.9.2 远程批量执行命令&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fabric </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Connection</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hosts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;host1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;host2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> h </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hosts:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Connection(h)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    c.run(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;uptime&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_1-9-3-监控并自动重启服务" tabindex="-1">1.9.3 监控并自动重启服务 <a class="header-anchor" href="#_1-9-3-监控并自动重启服务" aria-label="Permalink to &quot;1.9.3 监控并自动重启服务&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> psutil, os, time</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;nginx&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> not</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [p.name() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> psutil.process_iter()]:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        os.system(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;systemctl start nginx&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    time.sleep(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">60</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="_1-9-4-自动化测试与报告" tabindex="-1">1.9.4 自动化测试与报告 <a class="header-anchor" href="#_1-9-4-自动化测试与报告" aria-label="Permalink to &quot;1.9.4 自动化测试与报告&quot;">​</a></h3><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pytest</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pytest.main([</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;--html=report.html&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><hr><h2 id="_1-10-常见问题与解决" tabindex="-1">1.10 常见问题与解决 <a class="header-anchor" href="#_1-10-常见问题与解决" aria-label="Permalink to &quot;1.10 常见问题与解决&quot;">​</a></h2><ul><li>SSH 连接失败：检查主机、端口、防火墙、密钥。</li><li>权限不足：用 sudo 或调整权限。</li><li>依赖冲突：用虚拟环境隔离。</li><li>日志丢失：用文件日志或集中采集。</li><li>容器管理失败：检查 Docker/K8s 版本与权限。</li></ul><h2 id="_1-11-最佳实践" tabindex="-1">1.11 最佳实践 <a class="header-anchor" href="#_1-11-最佳实践" aria-label="Permalink to &quot;1.11 最佳实践&quot;">​</a></h2><ul><li>自动化脚本加日志、异常处理、参数校验。</li><li>配置、密钥、敏感信息用环境变量管理。</li><li>用虚拟环境隔离依赖，定期更新。</li><li>监控与告警自动化，及时发现故障。</li><li>代码、脚本、配置纳入版本管理。</li></ul><h2 id="_1-12-jsdoc-注释示例" tabindex="-1">1.12 JSDoc 注释示例 <a class="header-anchor" href="#_1-12-jsdoc-注释示例" aria-label="Permalink to &quot;1.12 JSDoc 注释示例&quot;">​</a></h2><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @param host {str} 主机名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @param cmd {str} 命令</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @returns {str} 执行结果</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> remote_exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(host, cmd):</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    远程执行命令</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :param host: 主机名</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :type host: str</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :param cmd: 命令</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :type cmd: str</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :return: 执行结果</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :rtype: str</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fabric </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Connection</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Connection(host)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    r </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> c.run(cmd, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">hide</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">True</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> r.stdout</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="_1-13-相关资源" tabindex="-1">1.13 相关资源 <a class="header-anchor" href="#_1-13-相关资源" aria-label="Permalink to &quot;1.13 相关资源&quot;">​</a></h2><ul><li><a href="https://www.paramiko.org/" target="_blank" rel="noreferrer">paramiko 官方文档</a></li><li><a href="https://docs.fabfile.org/" target="_blank" rel="noreferrer">fabric 官方文档</a></li><li><a href="https://psutil.readthedocs.io/" target="_blank" rel="noreferrer">psutil 官方文档</a></li><li><a href="https://docker-py.readthedocs.io/" target="_blank" rel="noreferrer">docker-py 官方文档</a></li><li><a href="https://www.jenkins.io/zh/doc/" target="_blank" rel="noreferrer">Jenkins 官方文档</a></li><li><a href="https://docs.ansible.com/" target="_blank" rel="noreferrer">Ansible 官方文档</a></li><li><a href="https://docs.pytest.org/zh/latest/" target="_blank" rel="noreferrer">pytest 官方文档</a></li></ul><hr><blockquote><p>DevOps 与自动化运维重在实践，建议多用主流工具和库，注意安全与合规。</p></blockquote><hr><h1 id="python-测试与运维" tabindex="-1">Python 测试与运维 <a class="header-anchor" href="#python-测试与运维" aria-label="Permalink to &quot;Python 测试与运维&quot;">​</a></h1><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li>单元测试（unittest/pytest）</li><li>自动化运维（fabric/ansible）</li><li>CI/CD 持续集成与部署</li><li>日志与监控</li><li>常用工具与脚本</li><li>常见坑与最佳实践</li><li>FAQ</li><li>扩展阅读</li></ul><h2 id="单元测试-unittest-pytest" tabindex="-1">单元测试（unittest/pytest） <a class="header-anchor" href="#单元测试-unittest-pytest" aria-label="Permalink to &quot;单元测试（unittest/pytest）&quot;">​</a></h2><ul><li>unittest 为标准库，pytest 更强大，支持参数化、夹具、自动发现</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> unittest</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> TestAdd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unittest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">TestCase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(self):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.assertEqual(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;__main__&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    unittest.main()</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>pytest 示例：</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(a, b):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> b</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    assert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> add(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>推荐用 pytest 进行自动化测试，支持覆盖率、并发、mock</li></ul><h2 id="自动化运维-fabric-ansible" tabindex="-1">自动化运维（fabric/ansible） <a class="header-anchor" href="#自动化运维-fabric-ansible" aria-label="Permalink to &quot;自动化运维（fabric/ansible）&quot;">​</a></h2><ul><li>fabric：远程命令执行、批量部署、自动化脚本</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fabric </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Connection</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Connection(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">c.run(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ls&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>ansible：无 agent，适合大规模自动化，支持 playbook、模块化</li><li>常见场景：批量发布、远程备份、配置管理、自动化巡检</li></ul><h2 id="ci-cd-持续集成与部署" tabindex="-1">CI/CD 持续集成与部署 <a class="header-anchor" href="#ci-cd-持续集成与部署" aria-label="Permalink to &quot;CI/CD 持续集成与部署&quot;">​</a></h2><ul><li>常用工具：GitHub Actions、Jenkins、GitLab CI、Travis CI</li><li>典型流程：代码提交 → 自动测试 → 构建打包 → 自动部署</li><li>Python 项目可用 tox/nox 做多版本测试</li><li>推荐用 Docker 容器化部署</li></ul><h2 id="日志与监控" tabindex="-1">日志与监控 <a class="header-anchor" href="#日志与监控" aria-label="Permalink to &quot;日志与监控&quot;">​</a></h2><ul><li>logging 标准库，支持多级日志、文件输出、格式化</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logging</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logging.basicConfig(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">level</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logging.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">INFO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;app.log&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logging.info(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;启动服务&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>推荐用 ELK、Prometheus、Grafana 做监控和告警</li></ul><h2 id="常用工具与脚本" tabindex="-1">常用工具与脚本 <a class="header-anchor" href="#常用工具与脚本" aria-label="Permalink to &quot;常用工具与脚本&quot;">​</a></h2><ul><li>supervisor、pm2：进程守护</li><li>crontab：定时任务</li><li>rsync/scp：文件同步</li><li>curl/httpie：接口测试</li></ul><h2 id="常见坑与最佳实践" tabindex="-1">常见坑与最佳实践 <a class="header-anchor" href="#常见坑与最佳实践" aria-label="Permalink to &quot;常见坑与最佳实践&quot;">​</a></h2><ul><li>测试用例要覆盖边界和异常</li><li>自动化脚本建议加日志和异常处理</li><li>CI/CD 流程建议加自动回滚</li><li>运维脚本建议用虚拟环境隔离依赖</li><li>生产环境配置与密钥不要写死在代码里</li></ul><h2 id="faq" tabindex="-1">FAQ <a class="header-anchor" href="#faq" aria-label="Permalink to &quot;FAQ&quot;">​</a></h2><ul><li>Q: pytest 如何只运行部分测试？ A: <code>pytest test_x.py::test_func</code></li><li>Q: 如何生成测试覆盖率报告？ A: <code>pytest --cov=src</code></li><li>Q: fabric/ansible 如何批量执行命令？ A: fabric 用 for 循环，ansible 用 hosts 列表</li></ul><h2 id="jsdoc-注释示例" tabindex="-1">JSDoc 注释示例 <a class="header-anchor" href="#jsdoc-注释示例" aria-label="Permalink to &quot;JSDoc 注释示例&quot;">​</a></h2><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># @returns {bool} 测试是否通过</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> test_add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">():</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    测试加法</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :return: 测试是否通过</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    :rtype: bool</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="扩展阅读" tabindex="-1">扩展阅读 <a class="header-anchor" href="#扩展阅读" aria-label="Permalink to &quot;扩展阅读&quot;">​</a></h2><ul><li><a href="https://docs.python.org/zh-cn/3/library/unittest.html" target="_blank" rel="noreferrer">unittest 官方文档</a></li><li><a href="https://docs.pytest.org/zh/latest/" target="_blank" rel="noreferrer">pytest 官方文档</a></li><li><a href="https://www.fabfile.org/" target="_blank" rel="noreferrer">fabric 官方文档</a></li><li><a href="https://docs.ansible.com/" target="_blank" rel="noreferrer">ansible 官方文档</a></li><li><a href="https://docs.github.com/actions" target="_blank" rel="noreferrer">GitHub Actions 文档</a></li><li><a href="https://docs.python.org/zh-cn/3/library/logging.html" target="_blank" rel="noreferrer">Python logging 文档</a></li></ul><hr><blockquote><p>建议每个项目都编写单元测试，结合 CI/CD 自动化流程，生产环境注意日志、监控和配置安全。</p></blockquote>`,88)]))}const E=i(e,[["render",t]]);export{c as __pageData,E as default};
