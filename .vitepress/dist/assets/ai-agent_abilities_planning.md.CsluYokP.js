import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"规划与决策","description":"","frontmatter":{},"headers":[],"relativePath":"ai-agent/abilities/planning.md","filePath":"ai-agent/abilities/planning.md","lastUpdated":1747212070000}'),p={name:"ai-agent/abilities/planning.md"};function e(t,s,h,k,r,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="规划与决策" tabindex="-1">规划与决策 <a class="header-anchor" href="#规划与决策" aria-label="Permalink to &quot;规划与决策&quot;">​</a></h1><h2 id="_1-能力简介" tabindex="-1">1. 能力简介 <a class="header-anchor" href="#_1-能力简介" aria-label="Permalink to &quot;1. 能力简介&quot;">​</a></h2><p>规划与决策（Planning &amp; Decision Making）是 AI Agent 将感知信息转化为具体行动方案的核心能力。通过任务分解、路径规划、推理引擎等技术，智能体能够自主制定任务执行计划，实现高效、灵活的自动化。</p><h2 id="_2-主要原理与关键技术" tabindex="-1">2. 主要原理与关键技术 <a class="header-anchor" href="#_2-主要原理与关键技术" aria-label="Permalink to &quot;2. 主要原理与关键技术&quot;">​</a></h2><ul><li><strong>任务分解（Task Decomposition）</strong>：将复杂任务拆解为可管理的子任务</li><li><strong>路径规划（Path Planning）</strong>：为多步骤任务生成最优执行顺序</li><li><strong>推理引擎（Reasoning Engine）</strong>：基于规则或大模型进行逻辑推理与决策</li><li><strong>计划生成（Plan Generation）</strong>：自动生成任务树或行动序列</li><li><strong>动态调整与反馈优化</strong>：根据执行结果实时调整计划</li></ul><h2 id="_3-jsdoc-代码示例" tabindex="-1">3. JSDoc 代码示例 <a class="header-anchor" href="#_3-jsdoc-代码示例" aria-label="Permalink to &quot;3. JSDoc 代码示例&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 任务分解与计划生成示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> goal</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 总体目标描述</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> planner</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 规划模块接口</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;Array&gt;}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 子任务列表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> generatePlan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">goal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">planner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> planner.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decompose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(goal);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 决策流程示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> context</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 当前上下文信息</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Array}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> options</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 可选行动方案</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> decisionEngine</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 决策引擎接口</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;any&gt;}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 最优决策</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> makeDecision</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">context</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">options</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">decisionEngine</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> decisionEngine.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">select</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(context, options);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="_4-实践要点与扩展建议" tabindex="-1">4. 实践要点与扩展建议 <a class="header-anchor" href="#_4-实践要点与扩展建议" aria-label="Permalink to &quot;4. 实践要点与扩展建议&quot;">​</a></h2><ul><li>结合感知与记忆，提升规划的上下文相关性</li><li>支持动态调整与异常处理，增强鲁棒性</li><li>可集成多种推理方式（规则、概率、神经网络等）</li><li>适用于自动化办公、流程机器人、多智能体协作等场景</li></ul><hr><p>规划与决策能力是 AI Agent 实现自主行动和复杂任务自动化的关键。</p>`,11)]))}const o=i(p,[["render",e]]);export{c as __pageData,o as default};
