import{_ as s,c as a,o as t,ag as e}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"测试与调试","description":"","frontmatter":{"title":"测试与调试"},"headers":[],"relativePath":"flutter/testing.md","filePath":"flutter/testing.md","lastUpdated":1747310844000}'),l={name:"flutter/testing.md"};function n(h,i,r,p,k,d){return t(),a("div",null,i[0]||(i[0]=[e(`<p>/**</p><ul><li>Flutter测试与调试</li><li>@description 介绍Flutter常用的测试与调试方法。 */</li></ul><h1 id="测试与调试" tabindex="-1">测试与调试 <a class="header-anchor" href="#测试与调试" aria-label="Permalink to &quot;测试与调试&quot;">​</a></h1><h2 id="单元测试-unit-test" tabindex="-1">单元测试（Unit Test） <a class="header-anchor" href="#单元测试-unit-test" aria-label="Permalink to &quot;单元测试（Unit Test）&quot;">​</a></h2><ul><li>使用 <code>test</code> 包进行 Dart 代码逻辑测试。</li></ul><div class="language-dart vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;加法测试&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>适合纯 Dart 逻辑、数据处理等。</li></ul><h2 id="widget测试" tabindex="-1">Widget测试 <a class="header-anchor" href="#widget测试" aria-label="Permalink to &quot;Widget测试&quot;">​</a></h2><ul><li>使用 <code>flutter_test</code> 包，测试 UI 组件渲染与交互。</li></ul><div class="language-dart vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">dart</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">testWidgets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;文本显示&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WidgetTester</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tester) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tester.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pumpWidget</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  expect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(find.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), findsOneWidget);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li>可模拟点击、输入、滚动等操作。</li></ul><h2 id="集成测试-integration-test" tabindex="-1">集成测试（Integration Test） <a class="header-anchor" href="#集成测试-integration-test" aria-label="Permalink to &quot;集成测试（Integration Test）&quot;">​</a></h2><ul><li>测试完整App的功能流程，适合自动化回归。</li><li>推荐使用 integration_test 包。</li></ul><h2 id="mock与依赖注入" tabindex="-1">Mock与依赖注入 <a class="header-anchor" href="#mock与依赖注入" aria-label="Permalink to &quot;Mock与依赖注入&quot;">​</a></h2><ul><li>通过 mockito、mocktail 等库模拟依赖，隔离外部影响。</li></ul><h2 id="调试技巧" tabindex="-1">调试技巧 <a class="header-anchor" href="#调试技巧" aria-label="Permalink to &quot;调试技巧&quot;">​</a></h2><ul><li>使用 <code>debugPrint</code> 输出日志。</li><li>断点调试：VS Code/Android Studio 支持断点、变量监控。</li><li>DevTools：性能分析、内存检测、Widget树可视化。</li></ul><h2 id="性能分析与内存检测" tabindex="-1">性能分析与内存检测 <a class="header-anchor" href="#性能分析与内存检测" aria-label="Permalink to &quot;性能分析与内存检测&quot;">​</a></h2><ul><li>DevTools 提供 CPU、内存、帧率等分析工具。</li><li>可定位性能瓶颈与内存泄漏。</li></ul><h2 id="常见测试用例与最佳实践" tabindex="-1">常见测试用例与最佳实践 <a class="header-anchor" href="#常见测试用例与最佳实践" aria-label="Permalink to &quot;常见测试用例与最佳实践&quot;">​</a></h2><ul><li>逻辑分层、单一职责、可测试性设计。</li><li>保持测试独立、可重复。</li><li>持续集成（CI）自动化测试。</li></ul>`,21)]))}const E=s(l,[["render",n]]);export{c as __pageData,E as default};
