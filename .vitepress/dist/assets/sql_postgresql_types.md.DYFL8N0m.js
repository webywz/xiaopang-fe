import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"PostgreSQL 数据类型（详解）","description":"","frontmatter":{},"headers":[],"relativePath":"sql/postgresql/types.md","filePath":"sql/postgresql/types.md","lastUpdated":1747206212000}'),t={name:"sql/postgresql/types.md"};function p(h,s,e,r,k,E){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="postgresql-数据类型-详解" tabindex="-1">PostgreSQL 数据类型（详解） <a class="header-anchor" href="#postgresql-数据类型-详解" aria-label="Permalink to &quot;PostgreSQL 数据类型（详解）&quot;">​</a></h1><h2 id="_1-数值类型" tabindex="-1">1. 数值类型 <a class="header-anchor" href="#_1-数值类型" aria-label="Permalink to &quot;1. 数值类型&quot;">​</a></h2><ul><li><strong>整数</strong>：SMALLINT（2字节）、INTEGER（4字节）、BIGINT（8字节） <ul><li>取值范围：有符号</li><li>建议：主键自增常用 SERIAL/BIGSERIAL，计数/状态用 SMALLINT/INTEGER</li></ul></li><li><strong>浮点数</strong>：REAL（4字节）、DOUBLE PRECISION（8字节）</li><li><strong>定点数</strong>：NUMERIC(精度,小数位)，适合金额等高精度场景</li></ul><h2 id="_2-字符串类型" tabindex="-1">2. 字符串类型 <a class="header-anchor" href="#_2-字符串类型" aria-label="Permalink to &quot;2. 字符串类型&quot;">​</a></h2><ul><li><strong>CHAR(n)</strong>：定长字符串，适合长度固定（如身份证号）</li><li><strong>VARCHAR(n)</strong>：变长字符串，适合大多数文本</li><li><strong>TEXT</strong>：大文本，无长度限制，适合日志、文章等</li><li><strong>BYTEA</strong>：二进制数据，适合图片、文件等</li></ul><h2 id="_3-日期与时间类型" tabindex="-1">3. 日期与时间类型 <a class="header-anchor" href="#_3-日期与时间类型" aria-label="Permalink to &quot;3. 日期与时间类型&quot;">​</a></h2><ul><li><strong>DATE</strong>：&#39;YYYY-MM-DD&#39;</li><li><strong>TIME [WITHOUT TIME ZONE]</strong>：&#39;HH:MM:SS&#39;</li><li><strong>TIMESTAMP [WITH/WITHOUT TIME ZONE]</strong>：&#39;YYYY-MM-DD HH:MM:SS&#39;，常用</li><li><strong>INTERVAL</strong>：时间间隔</li></ul><h2 id="_4-json-与数组类型" tabindex="-1">4. JSON 与数组类型 <a class="header-anchor" href="#_4-json-与数组类型" aria-label="Permalink to &quot;4. JSON 与数组类型&quot;">​</a></h2><ul><li><strong>JSON/JSONB</strong>：原生支持，JSONB 性能更优，支持索引与查询</li><li><strong>ARRAY</strong>：任意类型数组，适合多值字段</li></ul><h2 id="_5-枚举与复合类型" tabindex="-1">5. 枚举与复合类型 <a class="header-anchor" href="#_5-枚举与复合类型" aria-label="Permalink to &quot;5. 枚举与复合类型&quot;">​</a></h2><ul><li><strong>ENUM</strong>：自定义枚举类型，适合状态、性别等有限取值</li><li><strong>Composite Type</strong>：自定义复合类型，适合结构化数据</li></ul><h2 id="_6-类型选择与性能优化建议" tabindex="-1">6. 类型选择与性能优化建议 <a class="header-anchor" href="#_6-类型选择与性能优化建议" aria-label="Permalink to &quot;6. 类型选择与性能优化建议&quot;">​</a></h2><ul><li>能用小类型不用大类型，节省存储、提升索引效率</li><li>金额用 NUMERIC，避免浮点误差</li><li>文本优先用 VARCHAR，超大文本用 TEXT</li><li>时间建议用 TIMESTAMP WITH TIME ZONE，便于时区处理</li><li>JSONB 适合灵活扩展，支持索引</li><li>数组适合多值但不宜滥用，复杂结构建议拆表</li></ul><h2 id="_7-类型转换与兼容性" tabindex="-1">7. 类型转换与兼容性 <a class="header-anchor" href="#_7-类型转换与兼容性" aria-label="Permalink to &quot;7. 类型转换与兼容性&quot;">​</a></h2><ul><li>隐式转换可能导致索引失效，如 WHERE 字段=数字，字段为字符串类型</li><li>显式转换：CAST(expr AS type) 或 expr::type</li><li>注意不同数据库间类型兼容性（如 MySQL 的 DATETIME、Oracle 的 NUMBER）</li></ul><h2 id="_8-常见误区与最佳实践" tabindex="-1">8. 常见误区与最佳实践 <a class="header-anchor" href="#_8-常见误区与最佳实践" aria-label="Permalink to &quot;8. 常见误区与最佳实践&quot;">​</a></h2><ul><li>不要用字符串存储数值、日期</li><li>不要用 TEXT 存主键、索引字段</li><li>枚举值变更需谨慎，建议用 SMALLINT+字典表</li><li>二进制大对象（如图片）建议存储于对象存储，表中仅存路径</li><li>JSON 字段建议加 GIN 索引，提升查询效率</li></ul><h2 id="_9-sql-及-node-js-代码示例-jsdoc-注释" tabindex="-1">9. SQL 及 Node.js 代码示例（JSDoc 注释） <a class="header-anchor" href="#_9-sql-及-node-js-代码示例-jsdoc-注释" aria-label="Permalink to &quot;9. SQL 及 Node.js 代码示例（JSDoc 注释）&quot;">​</a></h2><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> order_status</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> AS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ENUM (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pending&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;paid&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;shipped&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;done&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> orders</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BIGSERIAL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  user_id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BIGINT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  amount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NUMERIC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  status</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> order_status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DEFAULT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;pending&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tags </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TEXT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  extra JSONB,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  created_at </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TIMESTAMPTZ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CURRENT_TIMESTAMP</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 插入订单数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {import(&#39;pg&#39;).Pool}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> userId</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {number}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> amount</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string[]}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tags</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> extra</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;void&gt;}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> addOrder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">pool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">userId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">amount</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">tags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">extra</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;INSERT INTO orders (user_id, amount, tags, extra) VALUES ($1, $2, $3, $4)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    [userId, amount, tags, extra]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><hr><blockquote><p>数据类型设计影响数据库性能与可维护性，建议团队统一规范，定期复查表结构，避免类型滥用。</p></blockquote>`,22)]))}const o=i(t,[["render",p]]);export{g as __pageData,o as default};
