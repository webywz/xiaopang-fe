import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"Prompt 设计","description":"","frontmatter":{},"headers":[],"relativePath":"ai-agent/prompt.md","filePath":"ai-agent/prompt.md","lastUpdated":1747212070000}'),t={name:"ai-agent/prompt.md"};function p(h,s,r,e,k,o){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="prompt-设计" tabindex="-1">Prompt 设计 <a class="header-anchor" href="#prompt-设计" aria-label="Permalink to &quot;Prompt 设计&quot;">​</a></h1><h2 id="_1-概述" tabindex="-1">1. 概述 <a class="header-anchor" href="#_1-概述" aria-label="Permalink to &quot;1. 概述&quot;">​</a></h2><p>Prompt（提示词）设计是驱动大模型和 AI Agent 正确理解与执行任务的关键。优秀的 Prompt 能极大提升智能体的表现力、稳定性和可控性。</p><h2 id="_2-prompt-工程基础" tabindex="-1">2. Prompt 工程基础 <a class="header-anchor" href="#_2-prompt-工程基础" aria-label="Permalink to &quot;2. Prompt 工程基础&quot;">​</a></h2><ul><li><strong>任务驱动</strong>：明确任务目标，聚焦核心需求。</li><li><strong>角色扮演</strong>：指定智能体身份或风格，提升输出一致性。</li><li><strong>上下文注入</strong>：补充背景信息、历史对话、知识点等。</li><li><strong>输出格式约束</strong>：要求输出特定格式（如 JSON、Markdown、代码等）。</li><li><strong>多轮对话管理</strong>：通过上下文串联，实现复杂交互。</li></ul><h2 id="_3-常见-prompt-设计模式" tabindex="-1">3. 常见 Prompt 设计模式 <a class="header-anchor" href="#_3-常见-prompt-设计模式" aria-label="Permalink to &quot;3. 常见 Prompt 设计模式&quot;">​</a></h2><ul><li><strong>链式思维（Chain-of-Thought, CoT）</strong>：引导模型分步推理，提升复杂任务表现。</li><li><strong>树状推理（Tree-of-Thought, ToT）</strong>：多路径并行推理，适合开放性问题。</li><li><strong>反思式（Reflection）</strong>：让模型自我检查和修正输出。</li><li><strong>模板化 Prompt</strong>：预设模板，批量生成高质量提示词。</li></ul><h2 id="_4-典型应用场景" tabindex="-1">4. 典型应用场景 <a class="header-anchor" href="#_4-典型应用场景" aria-label="Permalink to &quot;4. 典型应用场景&quot;">​</a></h2><ul><li>智能问答与对话系统</li><li>自动化办公与流程机器人</li><li>代码生成与审查</li><li>数据分析与报告生成</li><li>多智能体协作任务</li></ul><h2 id="_5-jsdoc-代码示例" tabindex="-1">5. JSDoc 代码示例 <a class="header-anchor" href="#_5-jsdoc-代码示例" aria-label="Permalink to &quot;5. JSDoc 代码示例&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 构建带有角色和格式约束的 Prompt</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> role</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 智能体角色描述</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> task</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 任务说明</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> format</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 输出格式要求</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 构建好的 Prompt</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> buildPrompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">role</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">task</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`你是\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">role</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}。请完成如下任务：\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">task</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}。</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">请以如下格式输出：\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 链式思维 Prompt 示例</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> question</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> - 用户问题</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> CoT Prompt</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> chainOfThoughtPrompt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">question</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`请一步步详细推理并回答：\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">question</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="_6-实践技巧" tabindex="-1">6. 实践技巧 <a class="header-anchor" href="#_6-实践技巧" aria-label="Permalink to &quot;6. 实践技巧&quot;">​</a></h2><ul><li>明确指令，避免歧义</li><li>适当分步引导，提升复杂任务表现</li><li>利用示例（Few-shot）提升泛化能力</li><li>结合上下文与记忆，增强连续对话体验</li></ul><hr><p>Prompt 设计是 AI Agent 成功的基石，持续优化和实验是提升智能体能力的关键。</p>`,15)]))}const E=i(t,[["render",p]]);export{g as __pageData,E as default};
