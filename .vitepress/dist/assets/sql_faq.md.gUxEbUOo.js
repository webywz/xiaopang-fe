import{_ as a,c as i,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"SQL 常见问题 FAQ","description":"","frontmatter":{},"headers":[],"relativePath":"sql/faq.md","filePath":"sql/faq.md","lastUpdated":1747206212000}'),p={name:"sql/faq.md"};function t(h,s,e,r,k,d){return n(),i("div",null,s[0]||(s[0]=[l(`<h1 id="sql-常见问题-faq" tabindex="-1">SQL 常见问题 FAQ <a class="header-anchor" href="#sql-常见问题-faq" aria-label="Permalink to &quot;SQL 常见问题 FAQ&quot;">​</a></h1><h2 id="_1-语法与兼容性" tabindex="-1">1. 语法与兼容性 <a class="header-anchor" href="#_1-语法与兼容性" aria-label="Permalink to &quot;1. 语法与兼容性&quot;">​</a></h2><p><strong>Q1：为什么同一 SQL 在不同数据库报错？</strong><br> A：SQL 标准各数据库实现有差异，常见如字符串拼接、日期函数、分页语法等。建议查阅目标数据库官方文档，避免使用专有语法。</p><p><strong>Q2：如何安全拼接 SQL？</strong><br> A：严禁字符串拼接参数，必须使用参数化查询，防止 SQL 注入。</p><h2 id="_2-性能与慢查询" tabindex="-1">2. 性能与慢查询 <a class="header-anchor" href="#_2-性能与慢查询" aria-label="Permalink to &quot;2. 性能与慢查询&quot;">​</a></h2><p><strong>Q3：SQL 查询很慢怎么办？</strong><br> A：优先检查是否命中索引，使用 EXPLAIN 分析执行计划，避免全表扫描。可通过加索引、优化 SQL、分区表等手段提升性能。</p><p><strong>Q4：如何定位慢 SQL？</strong><br> A：开启慢查询日志，定期分析日志，重点关注扫描行数多、执行时间长的语句。</p><h2 id="_3-事务与锁" tabindex="-1">3. 事务与锁 <a class="header-anchor" href="#_3-事务与锁" aria-label="Permalink to &quot;3. 事务与锁&quot;">​</a></h2><p><strong>Q5：为什么出现死锁？如何排查？</strong><br> A：多事务并发更新同一资源顺序不一致易导致死锁。建议统一操作顺序，捕获死锁异常并重试。可用数据库自带工具（如 PostgreSQL 的 pg_locks）排查。</p><p><strong>Q6：事务未提交导致表被锁住怎么办？</strong><br> A：及时提交或回滚事务，避免长事务。可通过管理工具查看并终止异常会话。</p><h2 id="_4-安全与数据保护" tabindex="-1">4. 安全与数据保护 <a class="header-anchor" href="#_4-安全与数据保护" aria-label="Permalink to &quot;4. 安全与数据保护&quot;">​</a></h2><p><strong>Q7：如何防止 SQL 注入？</strong><br> A：所有输入参数必须参数化，严禁拼接。定期安全审计，限制数据库账户权限。</p><p><strong>Q8：如何加密敏感数据？</strong><br> A：可用数据库内置加密函数或应用层加密，备份文件也应加密存储。</p><h2 id="_5-备份恢复与数据丢失" tabindex="-1">5. 备份恢复与数据丢失 <a class="header-anchor" href="#_5-备份恢复与数据丢失" aria-label="Permalink to &quot;5. 备份恢复与数据丢失&quot;">​</a></h2><p><strong>Q9：误删数据如何恢复？</strong><br> A：如有定期备份可通过备份恢复。建议所有生产环境定期全量+增量备份，重要操作前手动备份。</p><p><strong>Q10：备份文件如何管理？</strong><br> A：备份文件应异地存储、加密、定期校验，定期测试恢复流程。</p><h2 id="_6-其他高频问题" tabindex="-1">6. 其他高频问题 <a class="header-anchor" href="#_6-其他高频问题" aria-label="Permalink to &quot;6. 其他高频问题&quot;">​</a></h2><p><strong>Q11：NULL 和空字符串有何区别？</strong><br> A：NULL 表示未知，空字符串为长度为0的已知值。判断 NULL 用 IS NULL。</p><p><strong>Q12：如何防止表结构频繁变更带来的风险？</strong><br> A：表结构变更前充分评估，建议版本化管理，生产环境变更需灰度或离线操作。</p><h2 id="_7-典型代码片段-含-jsdoc-注释" tabindex="-1">7. 典型代码片段（含 JSDoc 注释） <a class="header-anchor" href="#_7-典型代码片段-含-jsdoc-注释" aria-label="Permalink to &quot;7. 典型代码片段（含 JSDoc 注释）&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 参数化查询防止 SQL 注入</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {import(&#39;pg&#39;).Pool}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {string}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> username</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;object|null&gt;}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 用户信息</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getUserByName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">pool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sql</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;SELECT * FROM users WHERE username = $1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> pool.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sql, [username]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rows[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 查询慢 SQL（以 MySQL 为例）</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {import(&#39;mysql&#39;).Connection}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conn</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;Array&gt;}</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 慢查询列表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getSlowQueries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">conn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">query</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;SELECT * FROM mysql.slow_log ORDER BY start_time DESC LIMIT 10&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><hr><p>如有更多问题，建议查阅官方文档或团队内部知识库，持续总结与分享经验。</p>`,23)]))}const E=a(p,[["render",t]]);export{g as __pageData,E as default};
