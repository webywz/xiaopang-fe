import{_ as i,c as a,o as l,ag as n}from"./chunks/framework.DPDPlp3K.js";const b=JSON.parse('{"title":"Flexbox与Grid：如何选择合适的布局方案","description":"深度对比Flexbox与Grid的原理、适用场景与最佳实践，助你高效选择现代Web布局方案。","frontmatter":{"layout":"doc","title":"Flexbox与Grid：如何选择合适的布局方案","description":"深度对比Flexbox与Grid的原理、适用场景与最佳实践，助你高效选择现代Web布局方案。"},"headers":[],"relativePath":"basic/css/flexbox-vs-grid.md","filePath":"basic/css/flexbox-vs-grid.md","lastUpdated":1746781833000}'),e={name:"basic/css/flexbox-vs-grid.md"};function t(r,s,h,p,d,k){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="flexbox与grid-如何选择合适的布局方案" tabindex="-1">Flexbox与Grid：如何选择合适的布局方案 <a class="header-anchor" href="#flexbox与grid-如何选择合适的布局方案" aria-label="Permalink to &quot;Flexbox与Grid：如何选择合适的布局方案&quot;">​</a></h1><p>Flexbox和Grid是现代CSS中最常用的两大布局系统。本文将对比二者的核心原理、适用场景、常见用法与最佳实践，帮助你在实际开发中做出高效选择。</p><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li><a href="#flexbox与grid简介">Flexbox与Grid简介</a></li><li><a href="#核心原理对比">核心原理对比</a></li><li><a href="#适用场景分析">适用场景分析</a></li><li><a href="#常见布局案例">常见布局案例</a></li><li><a href="#性能与可维护性">性能与可维护性</a></li><li><a href="#最佳实践与选择建议">最佳实践与选择建议</a></li></ul><h2 id="flexbox与grid简介" tabindex="-1">Flexbox与Grid简介 <a class="header-anchor" href="#flexbox与grid简介" aria-label="Permalink to &quot;Flexbox与Grid简介&quot;">​</a></h2><ul><li><strong>Flexbox</strong>（弹性盒布局）：一维布局系统，适合行或列方向的内容分布。</li><li><strong>Grid</strong>（网格布局）：二维布局系统，适合同时控制行和列的复杂结构。</li></ul><h2 id="核心原理对比" tabindex="-1">核心原理对比 <a class="header-anchor" href="#核心原理对比" aria-label="Permalink to &quot;核心原理对比&quot;">​</a></h2><table tabindex="0"><thead><tr><th>特性</th><th>Flexbox</th><th>Grid</th></tr></thead><tbody><tr><td>维度</td><td>一维（行或列）</td><td>二维（行和列）</td></tr><tr><td>布局方式</td><td>内容驱动</td><td>网格驱动</td></tr><tr><td>子项定位</td><td>顺序相关</td><td>可任意定位</td></tr><tr><td>典型场景</td><td>导航栏、列表</td><td>整体页面、复杂组件</td></tr></tbody></table><h2 id="适用场景分析" tabindex="-1">适用场景分析 <a class="header-anchor" href="#适用场景分析" aria-label="Permalink to &quot;适用场景分析&quot;">​</a></h2><ul><li><strong>Flexbox适合：</strong><ul><li>水平或垂直排列的简单结构</li><li>内容数量不定的列表、导航、工具栏</li></ul></li><li><strong>Grid适合：</strong><ul><li>需要精确控制行列的复杂布局</li><li>整体页面结构、仪表盘、卡片瀑布流</li></ul></li></ul><h2 id="常见布局案例" tabindex="-1">常见布局案例 <a class="header-anchor" href="#常见布局案例" aria-label="Permalink to &quot;常见布局案例&quot;">​</a></h2><h3 id="flexbox实现水平居中" tabindex="-1">Flexbox实现水平居中 <a class="header-anchor" href="#flexbox实现水平居中" aria-label="Permalink to &quot;Flexbox实现水平居中&quot;">​</a></h3><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.container</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  justify-content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  align-items</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="grid实现九宫格布局" tabindex="-1">Grid实现九宫格布局 <a class="header-anchor" href="#grid实现九宫格布局" aria-label="Permalink to &quot;Grid实现九宫格布局&quot;">​</a></h3><div class="language-css vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">grid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-columns</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  grid-template-rows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">repeat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  gap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="flexbox与grid混合使用" tabindex="-1">Flexbox与Grid混合使用 <a class="header-anchor" href="#flexbox与grid混合使用" aria-label="Permalink to &quot;Flexbox与Grid混合使用&quot;">​</a></h3><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 外层用Grid实现整体结构，内层用Flexbox排列内容</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@example</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * &lt;div class=&quot;dashboard&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *   &lt;div class=&quot;sidebar&quot;&gt;...&lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *   &lt;div class=&quot;main&quot;&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *     &lt;div class=&quot;toolbar&quot;&gt;...&lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *     &lt;div class=&quot;content&quot;&gt;...&lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *   &lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * &lt;/div&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="性能与可维护性" tabindex="-1">性能与可维护性 <a class="header-anchor" href="#性能与可维护性" aria-label="Permalink to &quot;性能与可维护性&quot;">​</a></h2><ul><li>两者性能相近，合理使用不会成为瓶颈</li><li>Grid代码更简洁，适合复杂结构</li><li>Flexbox语义清晰，适合一维场景</li></ul><h2 id="最佳实践与选择建议" tabindex="-1">最佳实践与选择建议 <a class="header-anchor" href="#最佳实践与选择建议" aria-label="Permalink to &quot;最佳实践与选择建议&quot;">​</a></h2><ul><li>一维布局优先用Flexbox，二维布局优先用Grid</li><li>可以混合使用，外层结构用Grid，内层细节用Flexbox</li><li>关注浏览器兼容性，IE11不支持Grid部分高级特性</li></ul><hr><blockquote><p>参考资料：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Flexible_Box_Layout" target="_blank" rel="noreferrer">MDN Flexbox</a> | <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Grid_Layout" target="_blank" rel="noreferrer">MDN Grid</a></p></blockquote>`,23)]))}const c=i(e,[["render",t]]);export{b as __pageData,c as default};
