import{_ as a,c as i,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"Oracle 数据类型","description":"","frontmatter":{},"headers":[],"relativePath":"sql/oracle/types.md","filePath":"sql/oracle/types.md","lastUpdated":1747206212000}'),e={name:"sql/oracle/types.md"};function h(p,s,t,r,k,d){return n(),i("div",null,s[0]||(s[0]=[l(`<h1 id="oracle-数据类型" tabindex="-1">Oracle 数据类型 <a class="header-anchor" href="#oracle-数据类型" aria-label="Permalink to &quot;Oracle 数据类型&quot;">​</a></h1><p>内容建设中，敬请期待。</p><h1 id="oracle-常用数据类型" tabindex="-1">Oracle 常用数据类型 <a class="header-anchor" href="#oracle-常用数据类型" aria-label="Permalink to &quot;Oracle 常用数据类型&quot;">​</a></h1><h2 id="数值类型" tabindex="-1">数值类型 <a class="header-anchor" href="#数值类型" aria-label="Permalink to &quot;数值类型&quot;">​</a></h2><ul><li>NUMBER(p,s)：高精度数值，p为总位数，s为小数位</li><li>INTEGER/INT：等价于 NUMBER(38)</li><li>FLOAT/BINARY_FLOAT/BINARY_DOUBLE：浮点数，适合科学计算</li></ul><h2 id="字符串类型" tabindex="-1">字符串类型 <a class="header-anchor" href="#字符串类型" aria-label="Permalink to &quot;字符串类型&quot;">​</a></h2><ul><li>VARCHAR2(n)：变长字符串，最大 4000 字节</li><li>CHAR(n)：定长字符串</li><li>CLOB：大文本，最大 4GB</li></ul><h2 id="日期与时间类型" tabindex="-1">日期与时间类型 <a class="header-anchor" href="#日期与时间类型" aria-label="Permalink to &quot;日期与时间类型&quot;">​</a></h2><ul><li>DATE：日期+时间（精确到秒）</li><li>TIMESTAMP[(n)]：高精度时间戳（可到微秒）</li><li>INTERVAL：时间间隔</li></ul><h2 id="布尔与特殊类型" tabindex="-1">布尔与特殊类型 <a class="header-anchor" href="#布尔与特殊类型" aria-label="Permalink to &quot;布尔与特殊类型&quot;">​</a></h2><ul><li>Oracle 无原生 BOOLEAN（PL/SQL 支持）</li><li>BLOB：二进制大对象</li><li>RAW(n)：定长二进制</li></ul><h2 id="类型转换与兼容性" tabindex="-1">类型转换与兼容性 <a class="header-anchor" href="#类型转换与兼容性" aria-label="Permalink to &quot;类型转换与兼容性&quot;">​</a></h2><ul><li>隐式转换易导致性能问题，建议显式 TO_CHAR/TO_DATE/TO_NUMBER</li><li>跨库迁移需注意类型映射（如 VARCHAR2 与 VARCHAR、DATE 精度差异）</li></ul><h2 id="设计建议与常见误区" tabindex="-1">设计建议与常见误区 <a class="header-anchor" href="#设计建议与常见误区" aria-label="Permalink to &quot;设计建议与常见误区&quot;">​</a></h2><ul><li>金额等高精度用 NUMBER，不建议用 FLOAT</li><li>字符串长度按实际需求分配，避免浪费</li><li>日期存储统一时区，避免混乱</li><li>大字段（CLOB/BLOB）建议分表或归档</li></ul><h2 id="典型-sql-示例" tabindex="-1">典型 SQL 示例 <a class="header-anchor" href="#典型-sql-示例" aria-label="Permalink to &quot;典型 SQL 示例&quot;">​</a></h2><div class="language-sql vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 创建表</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> orders</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NUMBER</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  order_no </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UNIQUE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  amount </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NUMBER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  created_at </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DATE</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="node-js-代码示例-含-jsdoc-注释" tabindex="-1">Node.js 代码示例（含 JSDoc 注释） <a class="header-anchor" href="#node-js-代码示例-含-jsdoc-注释" aria-label="Permalink to &quot;Node.js 代码示例（含 JSDoc 注释）&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 插入订单数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {oracledb.Connection}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conn</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {object}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> order</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> {id:number,order_no:string,amount:number}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@returns</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> {Promise&lt;void&gt;}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> insertOrder</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">conn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">order</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  await</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> conn.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">execute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;INSERT INTO orders (id, order_no, amount, created_at) VALUES (:id, :order_no, :amount, SYSDATE)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    order</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><hr><p>Oracle 类型丰富，建议根据业务需求合理选型，避免隐式转换和精度丢失。</p>`,21)]))}const o=a(e,[["render",h]]);export{c as __pageData,o as default};
